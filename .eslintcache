[{"/Users/mathieuchambaud/Documents/FrontHardShop/src/index.js":"1","/Users/mathieuchambaud/Documents/FrontHardShop/src/Reducer/store.js":"2","/Users/mathieuchambaud/Documents/FrontHardShop/src/App.js":"3","/Users/mathieuchambaud/Documents/FrontHardShop/src/data/fetchUser.js":"4","/Users/mathieuchambaud/Documents/FrontHardShop/src/Reducer/AllReducers.js":"5","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/index.js":"6","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/StartConfig.jsx":"7","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step4/Step4.jsx":"8","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/HomePage.jsx":"9","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Login.jsx":"10","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step7/Step7.jsx":"11","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step2/Step2.jsx":"12","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step9/Step9.jsx":"13","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step3/Step3.jsx":"14","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step8/Step8.jsx":"15","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/ComponentsList/ComponentsList.jsx":"16","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Final/Final.jsx":"17","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step1/Step1.jsx":"18","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step6/Step6.jsx":"19","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Register.jsx":"20","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/AddCase.jsx":"21","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step5/Step5.jsx":"22","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/Case.jsx":"23","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HomeCRUD.jsx":"24","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/CaseList.jsx":"25","/Users/mathieuchambaud/Documents/FrontHardShop/src/state/index.js":"26","/Users/mathieuchambaud/Documents/FrontHardShop/src/Reducer/AuthReducer.js":"27","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/rootSlice.js":"28","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/index.style.js":"29","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/MobileNav.jsx":"30","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/DesktopNav.jsx":"31","/Users/mathieuchambaud/Documents/FrontHardShop/src/data/get_api_data.js":"32","/Users/mathieuchambaud/Documents/FrontHardShop/src/data/fetchData.js":"33","/Users/mathieuchambaud/Documents/FrontHardShop/src/data/post_api_data.js":"34","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/StartConfig.style.jsx":"35","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Final/Final.style.jsx":"36","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Card/Card.jsx":"37","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step4/Step4.style.jsx":"38","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Login.style.jsx":"39","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/HomePage.style.jsx":"40","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step7/Step7.style.jsx":"41","/Users/mathieuchambaud/Documents/FrontHardShop/src/state/Theme.js":"42","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step9/Step9.style.jsx":"43","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step2/Step2.style.jsx":"44","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/Case.style.jsx":"45","/Users/mathieuchambaud/Documents/FrontHardShop/src/state/Menu.js":"46","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step5/Step5.style.jsx":"47","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Register.style.jsx":"48","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step6/Step6.style.jsx":"49","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step1/Step1.style.jsx":"50","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/Modale.jsx":"51","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/GPUList.jsx":"52","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/CPUList.jsx":"53","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/PSU/PSUList.jsx":"54","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/MotherBoard/MotherBoardList.jsx":"55","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/RAM/RAMList.jsx":"56","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/SSD/SSDList.jsx":"57","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HDD/HDDList.jsx":"58","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/CoolingList.jsx":"59","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Onglet/Onglet.jsx":"60","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CoolingList/CoolingList.jsx":"61","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Slider/index.js":"62","/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useScroll.js":"63","/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useScrollFreeze.js":"64","/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useTheme.js":"65","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/DesktopNav.style.jsx":"66","/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useToggle.js":"67","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/NavLinks.jsx":"68","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/MobileNav.style.jsx":"69","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/ComponentsList/ComponentsList.style.jsx":"70","/Users/mathieuchambaud/Documents/FrontHardShop/src/data/delete_api_data.js":"71","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step8/Step8.style.jsx":"72","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step3/Step3.style.jsx":"73","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CaseList/CaseList.jsx":"74","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Card/Card.style.jsx":"75","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/Modale.style.jsx":"76","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleGPU.jsx":"77","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/CPU.style.jsx":"78","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleCPU.jsx":"79","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/GPU.style.jsx":"80","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModalePSU.jsx":"81","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/PSU/PSU.style.jsx":"82","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleMotherBoard.jsx":"83","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/MotherBoard/MotherBoard.style.jsx":"84","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleRAM.jsx":"85","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/RAM/RAM.style.jsx":"86","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/Cooling.style.jsx":"87","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleCooling.jsx":"88","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HDD/HDD.style.jsx":"89","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleHDD.jsx":"90","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleSSD.jsx":"91","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/SSD/SSD.style.jsx":"92","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/SSDList/SSDList.jsx":"93","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/RAMList/RAMList.jsx":"94","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/HDDList/HDDList.jsx":"95","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/MotherBoardList/MotherBoardList.jsx":"96","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/GPUList/GPUList.jsx":"97","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CPUList/CPUList.jsx":"98","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Slider/content.js":"99","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CoolingList/CoolingList.style.jsx":"100","/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useLocalStorage.js":"101","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/Icon.js":"102","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/NavLinks.style.jsx":"103","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/AddCPU.jsx":"104","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/AddGPU.jsx":"105","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/CPU.jsx":"106","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/GPU.jsx":"107","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/PSU/AddPSU.jsx":"108","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/MotherBoard/AddMotherBoard.jsx":"109","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/RAM/AddRAM.jsx":"110","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/Cooling.jsx":"111","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/AddCooling.jsx":"112","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HDD/AddHDD.jsx":"113","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/SSD/AddSSD.jsx":"114","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CPUList/CPUList.style.jsx":"115","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/GPUList/GPUList.style.jsx":"116","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/GPUList/ModaleGPU.jsx":"117","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/HDDList/HDDList.style.jsx":"118","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/MotherBoardList/MotherBoardList.style.jsx":"119","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/RAMList/RAMList.style.jsx":"120","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/SSDList/SSDList.style.jsx":"121","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CaseList/CaseList.style.jsx":"122"},{"size":720,"mtime":1619469325996,"results":"123","hashOfConfig":"124"},{"size":345,"mtime":1618141958691,"results":"125","hashOfConfig":"124"},{"size":3341,"mtime":1619469325975,"results":"126","hashOfConfig":"124"},{"size":572,"mtime":1619469325994,"results":"127","hashOfConfig":"124"},{"size":254,"mtime":1618162236479,"results":"128","hashOfConfig":"124"},{"size":274,"mtime":1615560466317,"results":"129","hashOfConfig":"124"},{"size":613,"mtime":1619469326015,"results":"130","hashOfConfig":"124"},{"size":2031,"mtime":1619469326018,"results":"131","hashOfConfig":"124"},{"size":445,"mtime":1619469326000,"results":"132","hashOfConfig":"124"},{"size":3318,"mtime":1619469325997,"results":"133","hashOfConfig":"124"},{"size":1955,"mtime":1619473810377,"results":"134","hashOfConfig":"124"},{"size":3267,"mtime":1619469326017,"results":"135","hashOfConfig":"124"},{"size":3027,"mtime":1619473810378,"results":"136","hashOfConfig":"124"},{"size":2214,"mtime":1619469326018,"results":"137","hashOfConfig":"124"},{"size":2337,"mtime":1619473810377,"results":"138","hashOfConfig":"124"},{"size":962,"mtime":1619469326014,"results":"139","hashOfConfig":"124"},{"size":772,"mtime":1619473810376,"results":"140","hashOfConfig":"124"},{"size":2379,"mtime":1619469326016,"results":"141","hashOfConfig":"124"},{"size":2121,"mtime":1619473810377,"results":"142","hashOfConfig":"124"},{"size":4953,"mtime":1619469325998,"results":"143","hashOfConfig":"124"},{"size":5593,"mtime":1619469326002,"results":"144","hashOfConfig":"124"},{"size":1599,"mtime":1619473810376,"results":"145","hashOfConfig":"124"},{"size":913,"mtime":1619469326003,"results":"146","hashOfConfig":"124"},{"size":4310,"mtime":1619469326009,"results":"147","hashOfConfig":"124"},{"size":7508,"mtime":1619469326004,"results":"148","hashOfConfig":"124"},{"size":49,"mtime":1615538264384,"results":"149","hashOfConfig":"124"},{"size":339,"mtime":1618141374273,"results":"150","hashOfConfig":"124"},{"size":1166,"mtime":1617434166746,"results":"151","hashOfConfig":"124"},{"size":119,"mtime":1615560490640,"results":"152","hashOfConfig":"124"},{"size":506,"mtime":1615560895183,"results":"153","hashOfConfig":"124"},{"size":710,"mtime":1615561156307,"results":"154","hashOfConfig":"124"},{"size":456,"mtime":1619469325994,"results":"155","hashOfConfig":"124"},{"size":544,"mtime":1619469325994,"results":"156","hashOfConfig":"124"},{"size":682,"mtime":1619469325995,"results":"157","hashOfConfig":"124"},{"size":453,"mtime":1617434166000,"results":"158","hashOfConfig":"124"},{"size":199,"mtime":1617434166000,"results":"159","hashOfConfig":"124"},{"size":1498,"mtime":1616952579095,"results":"160","hashOfConfig":"124"},{"size":500,"mtime":1619469326019,"results":"161","hashOfConfig":"124"},{"size":769,"mtime":1619469325998,"results":"162","hashOfConfig":"124"},{"size":155,"mtime":1619469326024,"results":"163","hashOfConfig":"124"},{"size":500,"mtime":1619469326021,"results":"164","hashOfConfig":"124"},{"size":564,"mtime":1615560157446,"results":"165","hashOfConfig":"124"},{"size":500,"mtime":1619469326022,"results":"166","hashOfConfig":"124"},{"size":394,"mtime":1619469326017,"results":"167","hashOfConfig":"124"},{"size":917,"mtime":1619469326003,"results":"168","hashOfConfig":"124"},{"size":658,"mtime":1615560135276,"results":"169","hashOfConfig":"124"},{"size":570,"mtime":1619469326020,"results":"170","hashOfConfig":"124"},{"size":722,"mtime":1619469325999,"results":"171","hashOfConfig":"124"},{"size":500,"mtime":1619469326021,"results":"172","hashOfConfig":"124"},{"size":503,"mtime":1619469326017,"results":"173","hashOfConfig":"124"},{"size":884,"mtime":1619469325976,"results":"174","hashOfConfig":"124"},{"size":6656,"mtime":1619469326007,"results":"175","hashOfConfig":"124"},{"size":7313,"mtime":1619469326001,"results":"176","hashOfConfig":"124"},{"size":7659,"mtime":1619469326011,"results":"177","hashOfConfig":"124"},{"size":7214,"mtime":1619469326010,"results":"178","hashOfConfig":"124"},{"size":6601,"mtime":1619469326012,"results":"179","hashOfConfig":"124"},{"size":7289,"mtime":1619469326013,"results":"180","hashOfConfig":"124"},{"size":7474,"mtime":1619469326008,"results":"181","hashOfConfig":"124"},{"size":7167,"mtime":1619469326005,"results":"182","hashOfConfig":"124"},{"size":3897,"mtime":1619469325981,"results":"183","hashOfConfig":"124"},{"size":1233,"mtime":1619469325988,"results":"184","hashOfConfig":"124"},{"size":1386,"mtime":1619469325983,"results":"185","hashOfConfig":"124"},{"size":498,"mtime":1615560255337,"results":"186","hashOfConfig":"124"},{"size":360,"mtime":1615560289173,"results":"187","hashOfConfig":"124"},{"size":428,"mtime":1615560312718,"results":"188","hashOfConfig":"124"},{"size":1129,"mtime":1616930739047,"results":"189","hashOfConfig":"124"},{"size":244,"mtime":1615560336782,"results":"190","hashOfConfig":"124"},{"size":3553,"mtime":1619469325979,"results":"191","hashOfConfig":"124"},{"size":257,"mtime":1619469325978,"results":"192","hashOfConfig":"124"},{"size":191,"mtime":1619469326014,"results":"193","hashOfConfig":"124"},{"size":686,"mtime":1619469325994,"results":"194","hashOfConfig":"124"},{"size":500,"mtime":1619469326022,"results":"195","hashOfConfig":"124"},{"size":500,"mtime":1619469326018,"results":"196","hashOfConfig":"124"},{"size":1264,"mtime":1619469325987,"results":"197","hashOfConfig":"124"},{"size":2018,"mtime":1619469325976,"results":"198","hashOfConfig":"124"},{"size":583,"mtime":1619469325976,"results":"199","hashOfConfig":"124"},{"size":850,"mtime":1619469325977,"results":"200","hashOfConfig":"124"},{"size":827,"mtime":1619469326001,"results":"201","hashOfConfig":"124"},{"size":881,"mtime":1619469325977,"results":"202","hashOfConfig":"124"},{"size":827,"mtime":1619469326007,"results":"203","hashOfConfig":"124"},{"size":893,"mtime":1619469325977,"results":"204","hashOfConfig":"124"},{"size":827,"mtime":1619469326011,"results":"205","hashOfConfig":"124"},{"size":941,"mtime":1619469325977,"results":"206","hashOfConfig":"124"},{"size":854,"mtime":1619469326009,"results":"207","hashOfConfig":"124"},{"size":784,"mtime":1619469325977,"results":"208","hashOfConfig":"124"},{"size":827,"mtime":1619469326012,"results":"209","hashOfConfig":"124"},{"size":831,"mtime":1619469326005,"results":"210","hashOfConfig":"124"},{"size":899,"mtime":1619469325977,"results":"211","hashOfConfig":"124"},{"size":826,"mtime":1619469326008,"results":"212","hashOfConfig":"124"},{"size":776,"mtime":1619469325977,"results":"213","hashOfConfig":"124"},{"size":784,"mtime":1619469325978,"results":"214","hashOfConfig":"124"},{"size":827,"mtime":1619469326013,"results":"215","hashOfConfig":"124"},{"size":1498,"mtime":1619469325993,"results":"216","hashOfConfig":"124"},{"size":1435,"mtime":1619469325992,"results":"217","hashOfConfig":"124"},{"size":1190,"mtime":1619469325990,"results":"218","hashOfConfig":"124"},{"size":1431,"mtime":1619469325991,"results":"219","hashOfConfig":"124"},{"size":1401,"mtime":1619469325988,"results":"220","hashOfConfig":"124"},{"size":1211,"mtime":1619469325985,"results":"221","hashOfConfig":"124"},{"size":1286,"mtime":1619469325982,"results":"222","hashOfConfig":"124"},{"size":155,"mtime":1619469325988,"results":"223","hashOfConfig":"124"},{"size":327,"mtime":1615560228124,"results":"224","hashOfConfig":"124"},{"size":2052,"mtime":1615560366892,"results":"225","hashOfConfig":"124"},{"size":1038,"mtime":1619469325981,"results":"226","hashOfConfig":"124"},{"size":6442,"mtime":1619469325999,"results":"227","hashOfConfig":"124"},{"size":5260,"mtime":1619469326005,"results":"228","hashOfConfig":"124"},{"size":142,"mtime":1619469325999,"results":"229","hashOfConfig":"124"},{"size":142,"mtime":1619469326006,"results":"230","hashOfConfig":"124"},{"size":5404,"mtime":1619469326010,"results":"231","hashOfConfig":"124"},{"size":5554,"mtime":1619469326009,"results":"232","hashOfConfig":"124"},{"size":5521,"mtime":1619469326012,"results":"233","hashOfConfig":"124"},{"size":150,"mtime":1619469326005,"results":"234","hashOfConfig":"124"},{"size":5030,"mtime":1619469326004,"results":"235","hashOfConfig":"124"},{"size":5841,"mtime":1619469326008,"results":"236","hashOfConfig":"124"},{"size":5932,"mtime":1619469326013,"results":"237","hashOfConfig":"124"},{"size":151,"mtime":1619469325986,"results":"238","hashOfConfig":"124"},{"size":887,"mtime":1619469325989,"results":"239","hashOfConfig":"124"},{"size":644,"mtime":1619469325989,"results":"240","hashOfConfig":"124"},{"size":151,"mtime":1619469325990,"results":"241","hashOfConfig":"124"},{"size":159,"mtime":1619469325991,"results":"242","hashOfConfig":"124"},{"size":151,"mtime":1619469325993,"results":"243","hashOfConfig":"124"},{"size":152,"mtime":1619469325994,"results":"244","hashOfConfig":"124"},{"size":304,"mtime":1619469325987,"results":"245","hashOfConfig":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xgsidm",{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mathieuchambaud/Documents/FrontHardShop/src/index.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/Reducer/store.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/App.js",["527","528","529","530"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nimport { MenuProvider } from './state';\nimport  Navbar  from './components/Navbar/nav/index';\nimport HomePage from './pages/HomePage';\nimport StartConfig from './pages/Configurator/StartConfig';\nimport Step1 from './pages/Configurator/Step1/Step1';\nimport Step2 from './pages/Configurator/Step2/Step2';\nimport Step3 from './pages/Configurator/Step3/Step3';\nimport Step4 from './pages/Configurator/Step4/Step4';\nimport Step5 from './pages/Configurator/Step5/Step5';\nimport Step6 from './pages/Configurator/Step6/Step6';\nimport Step7 from './pages/Configurator/Step7/Step7';\nimport Login from './pages/Authentication/Login';\nimport ComponentsList from './pages/ComponentsList/ComponentsList';\nimport Register from './pages/Authentication/Register';\nimport Step8 from './pages/Configurator/Step8/Step8';\nimport Step9 from './pages/Configurator/Step9/Step9';\nimport Final from './pages/Configurator/Final/Final';\nimport AddCase from './pages/CRUD/Case/AddCase';\nimport Case from './pages/CRUD/Case/Case';\nimport CaseList from './pages/CRUD/Case/CaseList';\nimport CRUD from './pages/CRUD/HomeCRUD';\n\n\nconst GlobaleStyle = createGlobalStyle`\n  ${reset};\n  html {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: \"Montserrat\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: var(--bg);\n    color: var(--text);\n  }\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  \n  a {\n    text-decoration: none;\n  }\n`;\n\n\nconst App = () => {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <GlobaleStyle />\n        <MenuProvider>\n          <Navbar />\n        </MenuProvider>\n      </div>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path='/login'>\n          <Login/>\n        </Route>\n        <Route exact path=\"/register\">\n          <Register />\n        </Route>\n        <Route exact path=\"/components\">\n          <ComponentsList />\n        </Route>\n        <Route exact path=\"/startconfig\">\n          <StartConfig />\n        </Route>\n        <Route exact path=\"/Configurator/Step1\">\n          <Step1 />\n        </Route>\n        <Route exact path=\"/Configurator/Step2\">\n          <Step2 />\n        </Route>\n        <Route exact path=\"/Configurator/Step3\">\n          <Step3 />\n        </Route>\n        <Route exact path=\"/Configurator/Step4\">\n          <Step4 />\n        </Route>\n        <Route exact path=\"/Configurator/Step5\">\n          <Step5 />\n        </Route>\n        <Route exact path=\"/Configurator/Step6\">\n          <Step6 />\n        </Route>\n        <Route exact path=\"/Configurator/Step7\">\n          <Step7 />\n        </Route>\n        <Route exact path=\"/admin\">\n          <CRUD />\n        </Route>\n        <Route exact path=\"/Configurator/Step8\">\n          <Step8 />\n        </Route>\n        <Route exact path=\"/Configurator/Step9\">\n          <Step9 />\n        </Route>\n        <Route exact path=\"/Configurator/Resume\">\n          <Final />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/data/fetchUser.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/Reducer/AllReducers.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/index.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/StartConfig.jsx",["531"],"import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router';\nimport { BeginConfigLink, StartConfigPageWrapper } from './StartConfig.style'\n\nconst StartConfig = () => {\n\n    const token = localStorage.getItem(\"token\");\n\n    return (\n        <StartConfigPageWrapper>\n            {token ? \n                <BeginConfigLink to=\"/Configurator/Step1\" >\n                    Commencer une configuration\n                </BeginConfigLink>\n            : \n                <Redirect to=\"/\" />\n            }\n        </StartConfigPageWrapper>\n    )\n}\n\nexport default StartConfig\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step4/Step4.jsx",["532","533","534"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { Card } from '../../../components/Card/Card';\nimport { ComponentsListWrapper, CustomForm, Step4PageWrapper, Title } from './Step4.style'\nimport { chooseCooling } from '../rootSlice';\nimport GetAPIData from '../../../data/get_api_data';\n\n\nconst Step4 = () => {\n\n    const [Cooling, setCooling] = useState([])\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const Refroidissement = useSelector(state => state.COOLING);\n\n\n    useEffect( () => {\n        const endpoint = 'Coolings'\n        GetAPIData(endpoint).then(\n            res => {\n                setCooling(res.data)\n            }\n        )\n    }, [])\n\n    console.log(Cooling)\n\n\n    return (\n        <Step4PageWrapper>\n            <Title>Etape 4/9 : le Refroidissement</Title>\n            <p style={{ paddingTop: \"12px\" }}>Le Refroidissement va vous permettre d'extraire la chaleur émise par le Processeur et l'évacuer</p>\n            <p style={{ paddingTop: \"12px\" }}> Attention ! Choisissez bien votre méthode de refroidissement sinon cela impactera vos performances</p>\n            <ComponentsListWrapper>\n                {Cooling.map(cooling => \n                    <Card>\n                        <Card.Image src={cooling.image} alt=\"Image\" />\n                        <Card.Body>\n                            <Card.Title>{cooling.nom}</Card.Title>\n                            <Card.Text>{cooling.description}</Card.Text>\n                            <Card.Button onClick={() => {\n                                dispatch(chooseCooling(cooling))\n                                history.push(\"/Configurator/Step5\")\n                            }}>Choisir</Card.Button>\n                        </Card.Body>\n                    </Card>\n                )}\n            </ComponentsListWrapper>\n        </Step4PageWrapper>\n    )\n}\n\nexport default Step4\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/HomePage.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Login.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step7/Step7.jsx",["535","536","537","538","539"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Card } from '../../../components/Card/Card';\nimport GetAPIData from '../../../data/get_api_data';\nimport { chooseHDD } from '../rootSlice';\nimport { ComponentsListWrapper, CustomForm, Step7PageWrapper, Title } from './Step7.style'\n\nconst Step7 = () => {\n\n    const [HDD, setHDD] = useState([]);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const Hdd = useSelector(state => state.HDD);\n\n    useEffect(() => {\n        const endpoint = 'HDDs'\n        GetAPIData(endpoint).then(\n            res => {\n                setHDD(res.data)\n            }\n        )\n    }, []);\n\n    const onSubmit = (data) => {\n        dispatch(chooseHDD(data.HDD));\n        history.push('/Configurator/Step8');\n    }\n\n\n    return (\n        <Step7PageWrapper>\n            <Title>Etape 7/9 : le Disque Dur</Title>\n            <p style={{paddingTop: \"12px\"}}></p>\n            <p style={{paddingTop: \"12px\"}}></p>\n            <ComponentsListWrapper>\n                {HDD && HDD.map(hdd => \n                    <Card>\n                        <Card.Image src={hdd.image} />\n                        <Card.Body>\n                            <Card.Title>{hdd.nom}</Card.Title>\n                            <Card.Text>{hdd.description} </Card.Text>\n                            <Card.Button\n                                onClick={() => {\n                                    dispatch(chooseHDD(hdd))\n                                    history.push('/Configurator/Step8')\n                                }}\n                            >Choisir</Card.Button>\n                        </Card.Body>\n                    </Card>\n                )}\n            </ComponentsListWrapper>\n        </Step7PageWrapper>\n    )\n}\n\nexport default Step7\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step2/Step2.jsx",["540","541","542"],"import React from 'react'\nimport { Card } from '../../../components/Card/Card';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport GetAPIData from '../../../data/get_api_data';\nimport { chooseMotherBoard } from '../rootSlice';\nimport { ComponentsListWrapper, Step2PageWrapper, Title } from './Step2.style'\n\nconst Step2 = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const MotherBoard = useSelector(state => state.MotherBoard);\n    const [MBs, setMBs] = useState([]);\n    const [MBIntels, setMBIntels] = useState([]);\n    const [MBAMDs, setMBAMDs] = useState([]);\n    const token = localStorage.getItem(\"token\");\n    const state = useSelector(state => state.config);\n\n    console.log(state.CPU?.type)\n\n    useEffect(() => {\n        const endpoint = 'MBAMD'\n        GetAPIData(endpoint).then(\n            res => {\n                setMBAMDs(res.data)\n            }\n        )\n    }, [])\n\n    useEffect(() => {\n        const url = 'MBIntel'\n        GetAPIData(url).then(\n            res => {\n                setMBIntels(res.data)\n            }\n        )\n    }, [])\n\n    console.log(MBs)\n\n\n\n    return(\n        <Step2PageWrapper>\n            <Title>Etape 2/9 : la Carte Mère</Title>\n            <p style={{ paddingTop: \"12px\" }}>Cette dernière vous permettra de choisir le format de votre Boitier</p>\n            <p style={{ paddingTop: \"12px\" }}>Elle permet aussi d'assurer la liaison entre chaque Composant ainsi que leur coordination</p>\n            {state.CPU?.type === 'Intel' ? \n                <ComponentsListWrapper>\n                    {MBIntels.map(MBIntel => \n                        <Card>\n                            <Card.Image src={MBIntel.image} alt=\"Image\" />\n                            <Card.Body>\n                                <Card.Title>{MBIntel.nom}</Card.Title>\n                                <Card.Text>{MBIntel.description}</Card.Text>\n                                <Card.Button onClick={() => {\n                                    dispatch(chooseMotherBoard(MBIntel))\n                                    history.push('/Configurator/Step3')\n                                }}>Choisir</Card.Button>\n                            </Card.Body>\n                        </Card> \n                    )}\n                </ComponentsListWrapper> \n            : \n                <ComponentsListWrapper>\n                    {MBAMDs.map(MBAMD => \n                        <Card>\n                            <Card.Image src={MBAMD.image} alt=\"Image\" />\n                            <Card.Body>\n                                <Card.Title>{MBAMD.nom}</Card.Title>\n                                <Card.Text>{MBAMD.description}</Card.Text>\n                                <Card.Button onClick={() => {\n                                    dispatch(chooseMotherBoard(MBAMD))\n                                    history.push('/Configurator/Step3')\n                                }}>Choisir</Card.Button>\n                            </Card.Body>\n                        </Card> \n                    )}\n                </ComponentsListWrapper>\n            }\n            </Step2PageWrapper>\n    )\n}\n\nexport default Step2\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step9/Step9.jsx",["543","544","545","546"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Card } from '../../../components/Card/Card';\nimport GetAPIData from '../../../data/get_api_data';\nimport { chooseCase } from '../rootSlice';\nimport { ComponentsListWrapper, CustomForm, Step9PageWrapper, Title } from './Step9.style'\n\nconst Step9 = () => {\n\n    const [CaseATX, setCaseATX] = useState([]);\n    const [CaseMini, setCaseMini] = useState();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const state = useSelector(state => state.config)\n    const Boitier = useSelector(state => state.Case);\n    const { register, handleSubmit } = useForm({\n        defaultValues: { Boitier }\n    });\n\n    useEffect(() => {\n        const endpoint = 'MiniTour'\n        GetAPIData(endpoint).then(\n            res => {\n                setCaseMini(res.data)\n            }\n        );\n    })\n\n    useEffect( () => {\n        const endpoint = 'MoyenTour'\n        GetAPIData(endpoint).then(\n            res => {\n                setCaseATX(res.data)\n                console.log(res.data)\n            }\n        )\n    }, [])\n\n    return (\n        <Step9PageWrapper>\n            <Title>Etape 9/9 : </Title>\n            <p></p>\n            <p></p>\n            {state.MotherBoard?.format === \"ATX\" ? \n                <ComponentsListWrapper>\n                    {CaseATX && CaseATX.map(boitier => \n                        <Card>\n                            <Card.Image />\n                            <Card.Body>\n                                <Card.Title>{boitier.nom} </Card.Title>\n                                <Card.Text>{boitier.description}</Card.Text>\n                                <Card.Button onClick={() => {\n                                    dispatch(chooseCase(boitier))\n                                    history.push('/Configurator/Resume')\n                                }}>Choisir</Card.Button>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </ComponentsListWrapper>\n            : \n                <ComponentsListWrapper>\n                    {CaseMini & CaseMini.map(casemini => \n                        <Card>\n                            <Card.Image />\n                            <Card.Body>\n                                <Card.Title>{casemini.nom}</Card.Title>\n                                <Card.Text>{casemini.description}</Card.Text>\n                                <Card.Button onClick={() => {\n                                    dispatch(chooseCase(casemini))\n                                    history.push('/Configurator/Resume')\n                                }}></Card.Button>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </ComponentsListWrapper>\n            }\n        </Step9PageWrapper>\n    )\n}\n\nexport default Step9\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step3/Step3.jsx",["547","548","549"],"import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useHistory } from 'react-router';\nimport GetAPIData from '../../../data/get_api_data';\n\n// ---------------------------------------------------------------\n\nimport { chooseRAM } from '../rootSlice';\nimport { Card } from '../../../components/Card/Card';\nimport { ComponentsListWrapper, CustomForm, Step3PageWrapper, Title } from './Step3.style';\n\nconst Step3 = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [RAMs, setRAMs] = useState([])\n    const token = localStorage.getItem(\"token\")\n    const RAM = useSelector(state => state.RAM);\n    const {register, handleSubmit } = useForm({\n        defaultValues: { RAM }\n    })\n\n    useEffect(() => {\n        const endpoint = 'RAMs'\n        GetAPIData(endpoint).then(\n            res => {\n                setRAMs(res.data)\n            }\n        )\n    }, [])\n\n    console.log(RAMs)\n\n    return (\n        <Step3PageWrapper>\n            <Title>Etape 3/9: les Barrettes de Mémoire Vive</Title>\n            <p style={{ paddingTop: \"12px\" }}>La Mémoire Vive confert au PC une rapidité et une fluidité dans l'exécution de différentes tâches.</p>\n            <p style={{ paddingTop: \"12px\"}}>Choisissez votre lot de barrettes mémoire : </p>\n            {token ? \n            <ComponentsListWrapper>\n                {RAMs.map(ram => \n                    <Card>\n                        <Card.Image src={ram.image} alt=\"Image\" />\n                        <Card.Body>\n                            <Card.Title>{ram.nom}</Card.Title>\n                            <Card.Text>Description : {ram.description}</Card.Text>\n                            <Card.Button onClick={() => {\n                                dispatch(chooseRAM(ram))\n                                history.push('/Configurator/Step4')\n                            }}>Choisir</Card.Button>\n                        </Card.Body>\n                    </Card>\n                )}\n            </ComponentsListWrapper>\n             : <Redirect to=\"/\" />}\n        </Step3PageWrapper>\n    )\n}\n\nexport default Step3\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step8/Step8.jsx",["550","551"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Card } from '../../../components/Card/Card';\nimport GetAPIData from '../../../data/get_api_data';\nimport { choosePSU } from '../rootSlice';\nimport { ComponentsListWrapper, Step8PageWrapper, Title } from './Step8.style';\n\nconst Step8 = () => {\n\n\n    const [PSU, setPSU] = useState([]);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const Psu = useSelector(state => state.PSU);\n\n    useEffect(() => {\n        const endpoint = 'PSUs'\n        GetAPIData(endpoint).then(\n            res => {\n                setPSU(res.data)\n            }\n        )\n    });\n\n    const onSubmit = (data) => {\n        dispatch(choosePSU(data.PSU));\n        history.push('/Configurator/Step9');\n    }\n\n    console.log(PSU);\n\n    return (\n        <Step8PageWrapper>\n            <Title>Etape 8/9 : L'Alimentation</Title>\n            <p style={{ paddingTop: \"12px\" }}>L'alimentation est là pour fournir l'électricité dont vos composants ont besoin !</p>\n            <p style={{ paddingTop: \"12px\" }}> Attention ! Il faut tout de même la choisir au préalable car,<br /> si votre Wattage n'est pas assez suffisant vous risquez d'avoir un baisse de performance</p>\n            <ComponentsListWrapper>\n                {PSU && PSU.map ? (psu => \n                    <Card>\n                        <Card.Image src={psu.image} />\n                        <Card.Body>\n                            <Card.Title>{psu.nom} </Card.Title>\n                            <Card.Text> {psu.description} </Card.Text>\n                            <Card.Button onClick={() => {\n                                dispatch(choosePSU(psu))\n                                history.push('/Configurator/Step9')\n                            }}></Card.Button>\n                        </Card.Body>\n                    </Card>\n                ) : \n                    <div>\n                        <p style={{paddingBottom: \"12px\"}}>Oups...  un incident s'est produit</p>\n                        <button onClick={() => history.push('/Configurator/Step9')}>Passer</button>\n                    </div>\n                }\n            </ComponentsListWrapper>\n        </Step8PageWrapper>\n    )\n}\n\nexport default Step8\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/ComponentsList/ComponentsList.jsx",["552","553","554","555","556","557"],"import React, { useEffect, useState } from 'react';\nimport { Tabs } from 'antd';\nimport CoolTabs from 'react-cool-tabs';\nimport { Card } from '../../components/Card/Card';\nimport { ComponentsListPageWrapper } from './ComponentsList.style';\nimport CaseList from '../../container/Listing/CaseList/CaseList';\nimport CoolingList from '../../container/Listing/CoolingList/CoolingList';\nimport GetAPIData from '../../data/get_api_data';\nimport Onglet from '../../components/Onglet/Onglet';\n\nconst ComponentsList = () => {\n\n    const { TabPane } = Tabs;\n\n    const [Case, setCase] = useState([]);\n\n    useEffect(() => {\n        const endpoint = 'Boitiers'\n        GetAPIData(endpoint).then(\n            res => {\n                setCase(res.data)\n                console.log(res.data)\n            }\n        )\n    }, [])\n\n    return (\n        <ComponentsListPageWrapper>\n            <Onglet />\n        </ComponentsListPageWrapper >\n    )\n}\n\nexport default ComponentsList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Final/Final.jsx",["558","559"],"import React from 'react';\nimport { FinalPageWrapper } from './Final.style';\nimport { useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\n\nconst Final = () => {\n\n    const state = useSelector(state => state);\n    console.log(state);\n    const CPU = useSelector(state => state.config.CPU)\n    const GPU = useSelector(state => state.config.GPU)\n    const token = localStorage.getItem(\"token\");\n\n    return (\n        <FinalPageWrapper>\n            {token ? \n                <div>\n                    <pre>{JSON.stringify(state, null, 2)}</pre>\n                    <Link to=\"/\">Start Over</Link>\n                </div>\n            : \n                <Redirect to=\"/\" />\n            }\n        </FinalPageWrapper>\n    )\n}\n\nexport default Final\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step1/Step1.jsx",["560","561","562"],"import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useHistory } from 'react-router-dom';\n\n\n// --------------------------------------------------------------\n\nimport { chooseCPU } from '../rootSlice';\nimport { ComponentsListWrapper, Step1PageWrapper, Title } from './Step1.style'; \nimport { Card } from '../../../components/Card/Card';\nimport GetAPIData from '../../../data/get_api_data';\n\n\nconst Step1 = () => {\n\n    const [cpus, setCpus] = useState([])\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const token = localStorage.getItem(\"token\")\n    const CPU = useSelector(state => state.CPU);\n    const state = useSelector(state => state.config)\n    const { register, handleSubmit } = useForm({\n        defaultValues: { CPU }\n    })\n\n    useEffect(() => {\n        const endpoint = 'CPUs';\n        GetAPIData(endpoint).then(\n            res => {\n                setCpus(res.data)\n            }\n        ) \n    }, [])\n\n    console.log(cpus);\n\n    return (\n        <Step1PageWrapper>\n            <Title style={{ paddingTop: \"100px\"}} >Etape 1/9 : Le processeur</Title>\n                <p style={{ paddingTop: \"12px\" }}>Celui-ci va déterminer quelle utilisation vous faites de votre machine, le \"Processeur\" est le \"Cerveau\" du PC</p>\n                <p style={{ paddingTop: \"12px\" }}>Etes vous plutôt Multi-tâches ou Jeux ?</p>\n            {token ? \n                <ComponentsListWrapper>\n                    {cpus && cpus.map(cpu => \n                        <Card>\n                            <Card.Image src={cpu.image} alt=\"Image\" />\n                            <Card.Body>\n                                <Card.Title>{cpu.nom}</Card.Title>\n                                <Card.Text>{cpu.description}</Card.Text>\n                                <Card.Button onClick={() => {\n                                    dispatch(chooseCPU(cpu))\n                                    history.push(\"/Configurator/Step2\")\n                                }}>Choisir</Card.Button>\n                            </Card.Body>\n                        </Card>    \n                    )}\n                </ComponentsListWrapper>\n            :\n                <Redirect to=\"/\" />\n            }\n        </Step1PageWrapper>\n    )\n}\n\nexport default Step1\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step6/Step6.jsx",["563","564","565","566","567","568"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router';\nimport { Card } from '../../../components/Card/Card';\nimport GetAPIData from '../../../data/get_api_data';\nimport { chooseSSD } from '../rootSlice';\nimport { ComponentsListWrapper, CustomForm, Step6PageWrapper, Title } from './Step6.style'\n\nconst Step6 = () => {\n\n    const [SSD, setSSD] = useState([]);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const Ssd = useSelector(state => state.SSD);\n    const { register, handleSubmit } = useForm({\n        defaultValues: { SSD }\n    });\n\n    useEffect(() => {\n        const endpoint = 'SSDs'\n        GetAPIData(endpoint).then(\n            res => {\n                setSSD(res.data)\n            }\n        )\n    }, [])\n\n    const onSubmit = (data) => {\n        dispatch(chooseSSD(data.SSD));\n        history.push('/Configurator/Step7');\n    }\n\n    console.log(SSD);\n\n\n    return (\n        <Step6PageWrapper>\n            <Title>Etape 6/9: Le Disque SSD</Title>\n            <p style={{ paddingTop: \"12px\" }}>Le SSD ou Solid State Drive est un moyen de stockage pour les données bien plus rapide que Disque Dur classique</p>\n            <p style={{ paddingTop: \"12px\" }}></p>\n            <ComponentsListWrapper>\n                {SSD && SSD.map(ssd => \n                    <Card>\n                        <Card.Image src={ssd.image} alt=\"Image\" />\n                        <Card.Body>\n                            <Card.Title>{ssd.nom}</Card.Title>\n                            <Card.Text>{ssd.description}</Card.Text>\n                            <Card.Button onClick={() => {\n                                dispatch(chooseSSD(ssd))\n                                history.push('/Configurator/Step7')\n                            }}>Choisir</Card.Button>\n                        </Card.Body>\n                    </Card>    \n                )}\n            </ComponentsListWrapper>\n        </Step6PageWrapper>\n    )\n}\n\nexport default Step6\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Register.jsx",["569","570","571"],"import { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Field, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { Button, CustomField,  CustomInput, CustomLabel, RegisterWrapper, Title } from './Register.style';\nimport Store from '../../Reducer/store';\nimport fetchData from '../../data/fetchData';\n\n\nconst Register = () => {\n\n    const initialRegisterState = {\n        Name: '',\n        email: '',\n        password: '',\n        password_confirmation: ''\n    }\n\n    const [Register, setRegister] = useState(initialRegisterState);\n\n    const initialValues = {\n        Name: Register.Name ?? '',\n        email: Register.email ?? '',\n        password: Register.password ?? '',\n        password_confirmation: Register.password_confirmation ?? ''\n    }\n\n    const handleChangeForm = (event) => {\n        const { name, value } = event.target;\n        setRegister({ ...Register, [name]: value });\n    } \n\n    const history = useHistory();\n\n    const LegalSchema = Yup.object().shape({\n        Name: Yup.string()\n            .min(2, 'Ce champs doit contenir plus de 2 caractères')\n            .max(50, 'Ce champs doit contenir moins de 50 caractères')\n            .required('Veuillez remplir ce champ !'),\n        email: Yup.string()\n            .min(2, 'Ce champs doit contenir plus de 2 caractères')\n            .max(50, 'Ce champs doit contenir moins de 50 caractères')\n            .required('Veuillez remplir ce champ !'),\n        password: Yup.string()\n            .min(5, 'Ce champs doit contenir plus de 5 caractères')\n            .max(255, 'Ce champs doit contenir moins de 255 caractères')\n            .required('Veuillez remplir ce champ !'),\n        password_confirmation: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Les champs ne correspondent pas !')\n            .required('La confirmation du mot de passe est requise')\n    })\n\n    console.log(initialValues)\n  \n\n\n    return (\n        <RegisterWrapper>\n            <Title>Je m'enregistre</Title>\n            <div className=\"other\">\n                <div className=\"another\">\n                    <br />\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={LegalSchema}\n                        onSubmit={async (values) => {\n                            console.log(values, 'values')\n                            const endpoint = 'register';\n                            console.log(JSON.stringify(values), 'values');\n\n\n                            const response = await fetchData(endpoint, values).then(\n                                res => {\n                                    console.log(res)\n                                    localStorage.setItem(\"token\", res.access_token);\n                                    Store.dispatch({ type: \"SET_LOGIN\", payload: res?.user })\n                                    history.push('/')\n                                }\n                            ).catch(e => console.log(e));\n                            console.log(response, 'response');\n\n                        }}\n                    >\n                        {({\n                            errors,\n                            touched,\n                            handleSubmit,\n                        }) => (\n                            <form onChange={handleChangeForm} onSubmit={handleSubmit}>\n                                <CustomLabel>Votre Nom</CustomLabel>\n                                <CustomField name=\"Name\" type=\"text\" className=\"field\"></CustomField>\n                                <div className=\"form--error\">{errors.Name && touched.Name}</div>\n\n                                <CustomLabel>Email</CustomLabel>\n                                <CustomField name=\"email\" type=\"text\" className=\"field\"></CustomField>\n                                <div className=\"form--error\">{errors.email && touched.email}</div>\n\n                                <CustomLabel>Mot de Passe</CustomLabel>\n                                <CustomField name=\"password\" type=\"password\" className=\"field\"></CustomField>\n                                <div className=\"form--error\">{errors.password && touched.password}</div>\n\n                                <CustomLabel>Confirmation du mot de passe</CustomLabel>\n                                <CustomField name=\"password_confirmation\" type=\"password\" className=\"label\"></CustomField>\n                                <div className=\"form--error\">{errors.password_confirmation && touched.password_confirmation}</div>\n                                <br />\n\n                                <div>\n                                    <button type=\"submit\">S'Enregistrer</button>\n                                </div>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        </RegisterWrapper>\n    )\n}\n\nexport default Register\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/AddCase.jsx",["572","573","574","575","576"],"import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Field, Formik } from 'formik';\nimport PostAPIData from '../../../data/post_api_data';\nimport { CaseCRUDWrapper } from './Case.style';\n\nconst AddCase = ({ onClose }) => {\n\n    const initialCaseState = {\n        image: '',\n        RGB: false,\n        alim_inclus: false,\n        couleur: '',\n        facade_laterale: '',\n        description: '',\n        format: '',\n        nom: '',\n        ventilateur: '',\n    }\n\n    const [Case, setCase] = useState(initialCaseState);\n    const [submitted, setSubmitted] = useState(false);\n    const [RGB, setRGB] = useState(false);\n    const [alim, setAlim] = useState(false);\n\n   const initialValues = {\n        image: Case.image ?? '',\n        RGB: Case.RGB ?? '',\n        alim_inclus: Case.alim_inclus ?? '',\n        couleur: Case.couleur ?? '',\n        facade_laterale: Case.facade_laterale ?? '',\n        description: Case.description ?? '',\n        format: Case.format ?? '',\n        nom: Case.nom ?? '',\n        ventilateur: Case.ventilateur ?? ''\n   }\n\n    const LegalSchema = Yup.object().shape({\n        image: Yup.string()\n            .required(\"Ce champ est requis !\"),\n        RGB: Yup.boolean()\n            .required('Cette option est requise !'),\n        alim_inclus: Yup.boolean()\n            .required('Cette option est requise !'),\n        couleur: Yup.string()\n            .required('Ce champ est requis !'),\n        facade_laterale: Yup.string()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('Ce champ est requis !'),\n        format: Yup.string()\n            .required('Ce champ est requis !'),\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        ventilateur: Yup.string()\n            .required('Ce champ est requis !'),\n    })\n\n    console.log(initialValues);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setCase({ ...Case, [name]: value })\n    }\n\n    return (\n        <CaseCRUDWrapper>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={LegalSchema}\n                        onSubmit={async (values) => {\n                            console.log(values, 'values')\n                            const endpoint = `Boitier`;\n                            console.log(JSON.stringify(values), 'values')\n\n                            const response = await PostAPIData(endpoint, values).then(\n                                setSubmitted(true)\n                            ).catch(e => {\n                                console.log(e)\n                            })\n                            console.log(response, 'response');\n                            onClose()\n                        }}\n                    >\n                        {({\n                            errors,\n                            touched,\n                            handleSubmit\n                        }) => (\n                            <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                                <label>Nom</label>\n                                <Field name=\"nom\" type=\"text\" placeholder=\"Renseignez le nom\" className=\"first-input\"></Field>\n                                <div className=\"form--error\">{errors.nom && touched.nom}</div>\n\n                                <label>Image</label>\n                                <Field name=\"image\" placeholder=\"Renseignez l'image\"></Field>\n                                <div>{errors.image && touched.image}</div>\n\n                                <label>Couleur</label>\n                                <Field name=\"couleur\" type=\"text\" placeholder=\"Renseignez la couleur\"></Field>\n                                <div>{errors.couleur && touched.couleur}</div>\n\n                                <label>Façade Latérale</label>\n                                <Field name=\"facade_laterale\" type=\"text\" placeholder=\"Renseignez la façade latérale\"></Field>\n                                <div className=\"form-error\">{errors.facade_laterale && touched.facade_laterale}</div>\n\n                                <label>Format</label>\n                                <Field name=\"format\" type='text' placeholder=\"Renseignez le format\"></Field>\n                                <div>{errors.format && touched.format} </div>\n\n                                <label>Ventilateur</label>\n                                <Field name=\"ventilateur\" type=\"text\"></Field>\n                                <div className=\"form--error\">{errors.ventilateur && touched.ventilateur}</div>\n\n                                <label>Description</label>\n                                <Field name=\"description\" type=\"text-area\"></Field>\n                                <div className=\"form--error\"> {errors.description && touched.description}</div>\n\n                                <label>RGB</label>\n                                <Field name='RGB' type=\"checkbox\"></Field>\n                                <div className=\"form--error\">{errors.RGB && touched.RGB}</div>\n\n                                <label>Alim Inclus</label>\n                                <Field type=\"checkbox\" name=\"alim_inclus\"></Field>\n                                <div>{errors.alim_inclus && touched.alim_inclus}</div>\n\n                                <button type=\"submit\">Envoyer</button>\n                            </form>\n                        )}\n                    </Formik>\n        </CaseCRUDWrapper>\n    ) \n}\n\nexport default AddCase\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step5/Step5.jsx",["577","578","579","580"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Card } from '../../../components/Card/Card';\nimport GetAPIData from '../../../data/get_api_data';\nimport { chooseGPU } from '../rootSlice';\nimport { ComponentsListWrapper, CustomForm, Step5PageWrapper } from './Step5.style';\n\nconst Step5 = () => {\n\n    const [GPU, setGPU] = useState([])\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const Gpu = useSelector(state => state.GPU);\n\n    useEffect(() => {\n        const endpoint = 'GPUs'\n        GetAPIData(endpoint).then(\n            res => {\n                setGPU(res.data)\n            }\n        )\n    }, [])\n\n    return (\n        <Step5PageWrapper>\n            <ComponentsListWrapper>\n                {GPU.map(gpu => \n                    <Card>\n                        <Card.Image src={gpu.image} />\n                        <Card.Body>\n                            <Card.Title> {gpu.nom} </Card.Title>\n                            <Card.Text> {gpu.description} </Card.Text>\n                            <Card.Button onClick={() => {\n                                dispatch(chooseGPU(gpu))\n                                history.push('/Configurator/Step6')\n                            }} >Choisir</Card.Button>\n                        </Card.Body>\n                    </Card>    \n                )}\n            </ComponentsListWrapper>\n        </Step5PageWrapper>\n    )\n}\n\nexport default Step5\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/Case.jsx",["581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router';\nimport { UpdateCaseWrapper } from './Case.style';\nimport PostAPIData from '../../../data/post_api_data';\n\nconst UpdateCase = ({ state, onClose }) => {\n\n    const initialCaseState = {\n        id: null,\n        image: '',\n        RGB: false,\n        alim_inclus: false,\n        couleur: '',\n        facade_laterale: '',\n        description: '',\n        format: '',\n        nom: '',\n        ventilateur: '',\n        published: false\n    }\n\n    const history = useHistory();\n    const [currentCase, setCurrentCase] = useState(initialCaseState);\n\n    const { image, RGB, alim_inclus, couleur, facade_laterale, description, format, nom, ventilateur, published} = state;\n\n    const initialValues = {\n        \n    }\n    \n    return (\n        <UpdateCaseWrapper>\n\n        </UpdateCaseWrapper>\n    )\n}\n\nexport default UpdateCase\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HomeCRUD.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/CaseList.jsx",["597","598","599","600","601","602","603"],"import React, { useState, useEffect } from 'react';\nimport { Drawer, Divider, Row, Col } from 'antd';\nimport GetAPIData from '../../../data/get_api_data';\nimport { Button, CaseCRUDWrapper, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './Case.style';\nimport UpdateCase from './Case';\nimport Modale, { UpdateCaseModale } from '../../../components/Modale/Modale';\n\nconst CaseList = () => {\n\n    const [Case, setCase] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentCase, setCurrentCase] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `Boitiers`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setCase(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveCase = (boitier, index) => {\n        setCurrentCase(boitier);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <CaseCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des Boitiers</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {Case && Case.map((boitier, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveCase(boitier, index)}\n                                        key={index}\n                                    >\n                                        {boitier.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <Modale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                        <UpdateCaseModale state={currentCase} cache={onCloseEdit} />\n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\"}}>\n                            {currentCase ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentCase.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>RGB :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.RGB}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Alimentation Inclus :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.alim_inclus}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Couleur :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.couleur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Façade Latérale :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.facade_laterale}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Format :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.format}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Ventilateur :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.ventilateur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.description}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Status :</strong>\n                                            </label>{\" \"}\n                                            {currentCase.published ? \"Published\" : \"Pending\"}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Boitier ...</p>\n                                        </div>\n                            )}\n                            </MiniCardWrapper>\n                    </Col>\n            </div>\n        </CaseCRUDWrapper>\n    )\n}\n\nexport default CaseList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/state/index.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/Reducer/AuthReducer.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/rootSlice.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/index.style.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/MobileNav.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/DesktopNav.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/data/get_api_data.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/data/fetchData.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/data/post_api_data.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/StartConfig.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Final/Final.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Card/Card.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step4/Step4.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Login.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/HomePage.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step7/Step7.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/state/Theme.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step9/Step9.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step2/Step2.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Case/Case.style.jsx",["604"],"import styled from 'styled-components';\nimport Sticky from 'react-stickynode';\n\nexport const CaseCRUDWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const InputWrapper = styled.ul`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const UpdateCaseWrapper = styled.div`\n\n`;\n\nexport const CustomSticky = styled.div`\n    z-index: 0;\n    border-radius: 12px;\n`;\n\nexport const Title = styled.h1`\n    font-family: 'Nunito';\n    font-size: 40px;\n`;\n\nexport const Item = styled.li`\n    padding-top: 20px;\n    font-family: 'Nunito';\n    cursor: pointer;\n\n    .active {\n\n    }\n`;\n\nexport const ItemList = styled.ul`\n\n`;\n\nexport const Button = styled.button`\n    \n`;\n\nexport const MiniCardWrapper = styled.div`\n    width: 400px;\n    height: 450px;\n    font-family: 'Nunito';\n    padding: 40px;\n    color: black;\n    background: #FFFFFF;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n`;","/Users/mathieuchambaud/Documents/FrontHardShop/src/state/Menu.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step5/Step5.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Authentication/Register.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step6/Step6.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step1/Step1.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/Modale.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/GPUList.jsx",["605","606","607","608","609"],"import React, { useState, useEffect } from 'react';\nimport { Col } from 'antd';\nimport GetAPIData from '../../../data/get_api_data';\nimport GPUModale from '../../../components/Modale/ModaleGPU';\nimport { Button, GPUCRUDWrapper, CustomSticky, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './GPU.style';\n\nconst GPUList = () => {\n\n    const [GPU, setGPU] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentGPU, setCurrentGPU] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `GPUs`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setGPU(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveGPU = (gpu, index) => {\n        setCurrentGPU(gpu);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <GPUCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des Cartes Graphiques</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {GPU && GPU.map((gpu, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveGPU(gpu, index)}\n                                        key={index}\n                                    >\n                                        {gpu.nom}.\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <GPUModale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\" }}>\n                            {currentGPU ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentGPU.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Fréquence :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.frequence}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Fréquence Boost :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.frequence_boost}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nombre de coeurs :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.nb_coeurs}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nombre Ventilateur :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.nb_ventilateur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Sorties Video :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.nb_video_output}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentGPU.description}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\", paddingTop: \"10px\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Boitier ...</p>\n                                        </div>\n                            )}\n                    </MiniCardWrapper>\n                </Col>\n            </div>\n        </GPUCRUDWrapper>\n    )\n}\n\nexport default GPUList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/CPUList.jsx",["610","611","612","613","614"],"import React, { useState, useEffect } from 'react';\nimport { Col } from 'antd';\nimport CPUModale from '../../../components/Modale/ModaleCPU';\nimport GetAPIData from '../../../data/get_api_data';\nimport { Button, CPUCRUDWrapper, CustomSticky, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './CPU.style';\n\nconst CaseList = () => {\n\n    const [CPU, setCPU] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentCPU, setCurrentCPU] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `CPUs`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setCPU(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveCPU = (cpu, index) => {\n        setCurrentCPU(cpu);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <CPUCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des Processeurs</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {CPU && CPU.map((cpu, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveCPU(cpu, index)}\n                                        key={index}\n                                    >\n                                        {cpu.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <CPUModale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\" }}>\n                            {currentCPU ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentCPU.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nb Coeurs :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.nb_coeur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nb Threads :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.nb_threads}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Fréquence :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.frequence}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Fréquence Boost :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.frequence_boost}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Cache :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.cache}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Architecture :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.architecture}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Type :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.type}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Socket :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.socket}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentCPU.description}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\", paddingTop: \"10px\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Boitier ...</p>\n                                        </div>\n                            )}\n                        </MiniCardWrapper>\n                    </Col>\n            </div>\n        </CPUCRUDWrapper>\n    )\n}\n\nexport default CaseList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/PSU/PSUList.jsx",["615","616","617","618","619","620","621"],"import React, { useState, useEffect } from 'react';\nimport { Drawer, Divider, Row, Col } from 'antd';\nimport GetAPIData from '../../../data/get_api_data';\nimport { Button, PSUCRUDWrapper, CustomSticky, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './PSU.style';\nimport PSUModale from '../../../components/Modale/ModalePSU';\n\nconst PSUList = () => {\n\n    const [PSU, setPSU] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentPSU, setCurrentPSU] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `PSUs`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setPSU(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActivePSU = (psu, index) => {\n        setCurrentPSU(psu);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <PSUCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des Alimentations</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {PSU && PSU.map((psu, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActivePSU(psu, index)}\n                                        key={index}\n                                    >\n                                        {psu.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <PSUModale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                    </Col>\n                    <Col xl={12}>\n                        <CustomSticky\n                            innerZ={999}\n                            className=\"sticky\"\n                            activeClass=\"isSticky\"\n                            top={202}\n                            bottomBoundary=\"#reviewSection\"\n                        >\n                            <MiniCardWrapper>\n                            {currentPSU ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentPSU.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>RGB :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.RGB}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Alimentation Inclus :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.alim_inclus}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Couleur :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.couleur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Façade Latérale :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.facade_laterale}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Format :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.format}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Ventilateur :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.ventilateur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.description}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Status :</strong>\n                                            </label>{\" \"}\n                                            {currentPSU.published ? \"Published\" : \"Pending\"}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Boitier ...</p>\n                                        </div>\n                            )}\n                            </MiniCardWrapper>\n                        </CustomSticky>\n                    </Col>\n            </div>\n        </PSUCRUDWrapper>\n    )\n}\n\nexport default PSUList;\n\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/MotherBoard/MotherBoardList.jsx",["622","623","624","625","626","627","628","629"],"import React, { useState, useEffect } from 'react';\nimport { Drawer, Divider, Row, Col } from 'antd';\nimport GetAPIData from '../../../data/get_api_data';\nimport { Button, MotherBoardCRUDWrapper, CustomSticky, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './MotherBoard.style';\nimport MotherBoardModale from '../../../components/Modale/ModaleMotherBoard';\n\nconst MotherBoardList = () => {\n\n    const [MotherBoard, setMotherBoard] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentMotherBoard, setCurrentMotherBoard] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `CarteMeres`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setMotherBoard(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveMB = (mb, index) => {\n        setCurrentMotherBoard(mb);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <MotherBoardCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des Carte Mères</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {MotherBoard && MotherBoard.map((mb, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveMB(mb, index)}\n                                        key={index}\n                                    >\n                                        {mb.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <MotherBoardModale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\" }}>\n                            {currentMotherBoard ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentMotherBoard.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>RGB :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.RGB}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Alimentation Inclus :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.alim_inclus}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Couleur :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.couleur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Façade Latérale :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.facade_laterale}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Format :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.format}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Ventilateur :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.ventilateur}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentMotherBoard.description}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\", paddingTop: \"10px\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Boitier ...</p>\n                                        </div>\n                            )}\n                        </MiniCardWrapper>\n                    </Col>\n            </div>\n        </MotherBoardCRUDWrapper>\n    )\n}\n\nexport default MotherBoardList\n\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/RAM/RAMList.jsx",["630","631","632","633","634","635","636"],"import React, { useState, useEffect } from 'react';\nimport { Drawer, Divider, Row, Col } from 'antd';\nimport GetAPIData from '../../../data/get_api_data';\nimport { Button, RAMCRUDWrapper, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './RAM.style';\nimport RAMModale from '../../../components/Modale/ModaleRAM';\n\nconst RAMList = () => {\n\n    const [RAM, setRAM] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentRAM, setCurrentRAM] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `RAMs`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setRAM(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveRAM = (ram, index) => {\n        setCurrentRAM(ram);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <RAMCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des RAM</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {RAM && RAM.map((ram, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveRAM(ram, index)}\n                                        key={index}\n                                    >\n                                        {ram.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <RAMModale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\" }}>\n                            {currentRAM ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentRAM.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Capacité :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.capacité}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Fréquence :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.fréquence}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Interface :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.interface}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Latence :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.latence}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Marque :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.marque}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Quantité :</strong>\n                                            </label>{\" \"}\n                                            {currentRAM.quantité}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\", paddingTop: \"10px\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Boitier ...</p>\n                                        </div>\n                            )}\n                        </MiniCardWrapper>\n                    </Col>\n            </div>\n        </RAMCRUDWrapper>\n    )\n}\n\nexport default RAMList\n\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/SSD/SSDList.jsx",["637","638","639","640","641","642","643"],"import React, { useState, useEffect } from 'react';\nimport { Drawer, Divider, Row, Col } from 'antd';\nimport GetAPIData from '../../../data/get_api_data';\nimport { Button, SSDCRUDWrapper, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './SSD.style';\nimport SSDModale from '../../../components/Modale/ModaleSSD';\n\nconst SSDList = () => {\n\n    const [SSD, setSSD] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentSSD, setCurrentSSD] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `SSDs`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setSSD(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveSSD = (ssd, index) => {\n        setCurrentSSD(ssd);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <SSDCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des SSD</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {SSD && SSD.map((ssd, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveSSD(ssd, index)}\n                                        key={index}\n                                    >\n                                        {ssd.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <SSDModale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} /> \n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\" }}>\n                            {currentSSD ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentSSD.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Capacité :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.capacité}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Connectique :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.connectique}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Format :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.format}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Interface :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.interface}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Lecture :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.lecture}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Ecriture :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.ecriture}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Marque :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.marque}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentSSD.description}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\", paddingTop: \"10px\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un SSD ...</p>\n                                        </div>\n                            )}\n                        </MiniCardWrapper>\n                    </Col>\n            </div>\n        </SSDCRUDWrapper>\n    )\n}\n\nexport default SSDList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HDD/HDDList.jsx",["644","645","646","647","648","649","650","651"],"import React, { useState, useEffect } from 'react';\nimport { Drawer, Divider, Row, Col } from 'antd';\nimport DeleteAPIData from '../../../data/delete_api_data';\nimport GetAPIData from '../../../data/get_api_data';\nimport { Button, HDDCRUDWrapper, CustomSticky, InputWrapper, Item, ItemList, MiniCardWrapper, Title } from './HDD.style';\nimport HDDModale from '../../../components/Modale/ModaleHDD';\n\nconst HDDList = () => {\n\n    const [HDD, setHDD] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentHDD, setCurrentHDD] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `HDDs`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setHDD(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveHDD = (hdd, index) => {\n        setCurrentHDD(hdd);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <HDDCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des Disques Durs</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {HDD && HDD.map((hdd, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveHDD(hdd, index)}\n                                        key={index}\n                                    >\n                                        {hdd.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <HDDModale revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\" }}>\n                            {currentHDD ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentHDD.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>RPM :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.RPM}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Capacité :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.RGB}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Interface :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.interface}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Marque :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.marque}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Mémoire Cache :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.mémoire_cache}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Transfert :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.transfert}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentHDD.description}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\", paddingTop: \"10px\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button onClick={async () => {\n                                            const endpoint = `HDDs/${currentHDD.id}`\n                                            DeleteAPIData(endpoint).then(\n                                                res => {\n                                                    console.log(res)\n                                                }\n                                            )\n                                        }}>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Boitier ...</p>\n                                        </div>\n                            )}\n                        </MiniCardWrapper>\n                    </Col>\n            </div>\n        </HDDCRUDWrapper>\n    )\n}\n\nexport default HDDList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/CoolingList.jsx",["652","653","654","655","656","657","658","659","660"],"import React, { useState, useEffect } from 'react';\nimport { Drawer, Divider, Row, Col } from 'antd';\nimport GetAPIData from '../../../data/get_api_data';\nimport Modale, { UpdateCaseModale } from '../../../components/Modale/Modale';\nimport { CoolingCRUDWrapper, MiniCardWrapper, Title, InputWrapper, Item, ItemList, Button } from './Cooling.style';\nimport ModaleCooling from '../../../components/Modale/ModaleCooling';\n\nconst CoolingList = () => {\n\n    const [Cooling, setCooling] = useState([]);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleNew, setVisibleNew] = useState(false);\n    const [currentCooling, setCurrentCooling] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const onCloseEdit = () => {\n        setVisibleEdit(false)\n    }\n\n    const onCloseNew = () => {\n        setVisibleNew(false)\n    }\n\n    useEffect(() => {\n        const endpoint = `Coolings`;\n\n        GetAPIData(endpoint).then(\n            res => {\n                setCooling(res.data)\n                console.log(res.data, 'data');\n            }\n        ).catch(e => console.log(e));\n    }, []);\n\n    const setActiveCooling = (cooling, index) => {\n        setCurrentCooling(cooling);\n        setCurrentIndex(index);\n    }\n\n    return (\n        <CoolingCRUDWrapper>\n            <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'center', marginBottom: \"30px\" }}>\n                <Title style={{ paddingRight: \"100px\" }}>Liste des Refroidissements</Title>\n                <Button onClick={() => setVisibleNew(true)}>\n                    Nouveau\n                </Button>\n            </div>\n                <div style={{ marginTop: 10, display: \"flex\", flexDirection: 'row', justifyContent: \"space-between\" }}>\n                    <Col xl={12}>\n                        <InputWrapper>\n                            {Cooling && Cooling.map((cooling, index) => (\n                                <ItemList>\n                                    <Item className={\"list-items\" + (index === currentIndex ? \"active\" : \"\")}\n                                        onClick={() => setActiveCooling(cooling, index)}\n                                        key={index}\n                                    >\n                                        {cooling.nom}\n                                    </Item>\n                                </ItemList>\n                            ))}\n                        </InputWrapper>\n                        <ModaleCooling revele={visibleNew} cache={() => setVisibleNew(!visibleNew)} />\n                    </Col>\n                    <Col xl={12}>\n                        <MiniCardWrapper style={{ borderRadius: \"12px\" }}>\n                            {currentCooling ? (\n                                    <div>\n                                        <div>\n                                            <img src={currentCooling.image} style={{ width: \"150px\", height: \"150px\" }} />\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Bruit :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.bruit}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Format :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.format}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Image :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.image}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Marque:</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.marque}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Matériaux :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.matériaux}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Nom :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.nom}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Socket :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.socket}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Type :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.type}\n                                        </div>\n                                        <div>\n                                            <label>\n                                                <strong>Description :</strong>\n                                            </label>{\" \"}\n                                            {currentCooling.description}\n                                        </div>\n                                    <div style={{ justifyContent: \"center\", paddingTop: \"10px\" }}>\n                                        <Button onClick={() => setVisibleEdit(true)}>\n                                            Editer\n                                        </Button>\n                                        <Button>\n                                            Supprimer\n                                        </Button>\n                                    </div>\n                                    </div>\n                                ) : (\n                                        <div style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center'}}>\n                                            <br />\n                                            <p>Cliquer sur un Refroidissement ...</p>\n                                        </div>\n                            )}\n                        </MiniCardWrapper>\n                    </Col>\n            </div>\n        </CoolingCRUDWrapper>\n    )\n}\n\nexport default CoolingList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Onglet/Onglet.jsx",["661"],"import React, { useState } from 'react';\nimport { CSSAnimationGroup } from 'react-css-animation-group';\nimport CaseList from '../../container/Listing/CaseList/CaseList';\nimport CoolingList from '../../container/Listing/CoolingList/CoolingList';\nimport CPUList from '../../container/Listing/CPUList/CPUList';\nimport GPUList from '../../container/Listing/GPUList/GPUList';\nimport HDDList from '../../container/Listing/HDDList/HDDList';\nimport MotherBoardList from '../../container/Listing/MotherBoardList/MotherBoardList';\nimport RAMList from '../../container/Listing/RAMList/RAMList';\nimport SSDList from '../../container/Listing/SSDList/SSDList';\nimport './Onglet.css';\n\nconst Onglet = () => {\n\n\n    const [stateOnglets, setStateOnglets] = useState(1);\n\n    const goCase = () => {\n        setStateOnglets(1)\n    }\n\n    const goCooling = () => {\n        setStateOnglets(2)\n    }\n\n    const goCPU = () => {\n        setStateOnglets(3)\n    }\n\n    const goGPU = () => {\n        setStateOnglets(4)\n    }\n\n    const goHDD = () => {\n        setStateOnglets(5)\n    }\n\n    const goSSD = () => {\n        setStateOnglets(6)\n    }\n\n    const goMB = () => {\n        setStateOnglets(7)\n    }\n\n    const goRAM = () => {\n        setStateOnglets(8)\n    }\n\n    const goPSU = () => {\n        setStateOnglets(9)\n    }\n\n    return (\n        <div>\n            <div className=\"contBtn\">\n                <div className={`onglets ${stateOnglets === 1 ? 'active' : ''}`} onClick={goCase}>Boitiers</div>\n                <div className={`onglets ${stateOnglets === 2 ? 'active' : ''}`} onClick={goCooling}>Refroidissement</div>\n                <div className={`onglets ${stateOnglets === 3 ? 'active' : ''}`} onClick={goCPU}>Processeur</div>\n                <div className={`onglets ${stateOnglets === 4 ? 'active' : ''}`} onClick={goGPU}>Carte Graphique</div>\n                <div className={`onglets ${stateOnglets === 5 ? 'active' : ''}`} onClick={goHDD}>Disque Dur</div>\n                <div className={`onglets ${stateOnglets === 6 ? 'active' : ''}`} onClick={goSSD} >Disque SSD</div>\n                <div className={`onglets ${stateOnglets === 7 ? 'active' : ''}`} onClick={goMB}>Carte Mère</div>\n                <div className={`onglets ${stateOnglets === 8 ? 'active' : ''}`} onClick={goRAM}>Mémoire Vive</div>\n                <div className={`onglets ${stateOnglets === 9 ? 'active' : ''}`} onClick={goPSU}>Alimentation</div>\n            </div>\n            <div className=\"container\">\n                {stateOnglets === 1 ? \n                    <div className=\"contenu\">\n                            <CaseList/>\n                    </div>\n                : stateOnglets === 2 ?\n                    <div className=\"contenu\">\n                        <CoolingList />\n                    </div>\n                : stateOnglets === 3 ?\n                    <div className=\"contenu\">\n                        <CPUList />\n                    </div>\n                : stateOnglets === 4 ?\n                    <div className=\"contenu\">\n                        <GPUList />\n                    </div>\n                : stateOnglets === 5 ? \n                    <div className=\"contenu\">\n                        <HDDList />\n                    </div>\n                : stateOnglets === 6 ?\n                    <div className=\"contenu\">\n                        <SSDList />\n                    </div>\n                : stateOnglets === 7 ?\n                    <div className=\"contenu\">\n                        <MotherBoardList />\n                    </div>\n                : stateOnglets === 8 ?\n                    <div className=\"contenu\">\n                        <RAMList />\n                    </div>\n                : stateOnglets === 9 ? \n                    <div className=\"contenu\">\n\n                    </div>\n                : null\n                }\n            </div>\n        \n        </div>\n    )\n}\n\nexport default Onglet\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CoolingList/CoolingList.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Slider/index.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useScroll.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useScrollFreeze.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useTheme.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/DesktopNav.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useToggle.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/NavLinks.jsx",["662"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { useMenuContext } from '../../../state/Menu';\nimport { useTheme } from \"../../../hooks/useTheme\";\nimport Icon from '../Icon';\nimport { NavLink, NavLinksWrapper } from './NavLinks.style';\n\n\nconst DesktopNavLinks = () => {\n\n  const history = useHistory();\n  const state = useSelector(state => state.auth);\n  const { closeMenu } = useMenuContext();\n  const [theme, toggleTheme] = useTheme();\n  console.log(state.user.is_Admin);\n\n  const removeToken = () => {\n    localStorage.removeItem(\"token\");\n  }\n\n  const renderWithLogIn = () => {\n    return (\n      <NavLinksWrapper className=\"nav-links\">\n          <li key={\"Configurator\"}>\n            <NavLink to=\"/StartConfig\" className=\"link\" onClick={closeMenu}>\n              Configurator\n            </NavLink>\n          </li>\n          <li key={\"Composants\"}>\n            <NavLink to=\"/Components\" className=\"link\" onClick={closeMenu}>\n              Composants\n            </NavLink>\n          </li>\n          <li key={\"Profile\"}>\n            <NavLink to=\"/Profile\" className=\"link\" onClick={closeMenu}>\n              Profil\n            </NavLink>\n          </li>\n          <li>\n            <NavLink key={\"LogOut\"} to=\"/\" className=\"link\" onClick={removeToken}>\n              Déconnexion\n            </NavLink>\n          </li>\n          <li>\n            <button onClick={toggleTheme}>\n              <Icon name={theme === \"dark\" ? \"day\" : \"night\"} />\n            </button>\n          </li>\n      </NavLinksWrapper>\n    )\n  }\n\n  const renderForAdmin = () => {\n    return (\n      <NavLinksWrapper className=\"nav-links\">\n          <li key={\"Configurator\"}>\n            <NavLink to=\"/StartConfig\" className=\"link\" onClick={closeMenu}>\n              Configurator\n            </NavLink>\n          </li>\n          <li key={\"Composants\"}>\n            <NavLink to=\"/Components\" className=\"link\" onClick={closeMenu}>\n              Composants\n            </NavLink>\n          </li>\n          <li key={\"admin\"}>\n              <NavLink to=\"/admin\" className=\"link\" onClick={closeMenu}>\n                  Admin\n              </NavLink>\n          </li>\n          <li key={\"Déconnexion\"}>\n            <NavLink key={\"LogOut\"} to=\"/\" className=\"link\" onClick={removeToken}>\n              Déconnexion\n            </NavLink>\n          </li>\n          <li>\n            <button onClick={toggleTheme}>\n              <Icon name={theme === \"dark\" ? \"day\" : \"night\"} />\n            </button>\n          </li>\n      </NavLinksWrapper>\n    )\n  }\n\n  const renderWithoutLogIn = () => {\n    return (\n      <NavLinksWrapper className=\"nav-links\">\n        <li key={\"Components\"}>\n            <NavLink to=\"/Components\" className=\"link\" onClick={closeMenu}>\n              Composants\n            </NavLink>\n          </li>\n          <li key={\"S'incrire\"}>\n            <NavLink to=\"/register\" className=\"link\" onClick={closeMenu}>\n              Inscription\n            </NavLink>\n          </li>\n          <li key={\"Se connecter\"}>\n            <NavLink to=\"/login\" className=\"link\" onClick={closeMenu}>\n              Connexion\n            </NavLink>\n          </li>\n          <li>\n        <button onClick={toggleTheme}>\n          <Icon name={theme === \"dark\" ? \"day\" : \"night\"} />\n        </button>\n      </li>\n      </NavLinksWrapper>\n    )\n  }\n\n  return ( state.user.is_Admin === 1 ? \n    renderForAdmin()\n   : state.loggedIn ? \n    renderWithLogIn()\n  : \n    renderWithoutLogIn()\n  );\n};\n\nexport default DesktopNavLinks;","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/MobileNav.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/ComponentsList/ComponentsList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/data/delete_api_data.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step8/Step8.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/Configurator/Step3/Step3.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CaseList/CaseList.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Card/Card.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/Modale.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleGPU.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/CPU.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleCPU.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/GPU.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModalePSU.jsx",["663","664"],"import React from 'react'\nimport AddCase from '../../pages/CRUD/Case/AddCase'\nimport UpdateCase from '../../pages/CRUD/Case/Case';\nimport AddPSU from '../../pages/CRUD/PSU/AddPSU';\nimport { Overlay, Wrapper } from './Modale.style';\n\nconst PSUModale = ({ revele, cache }) => revele ? (\n\n    <React.Fragment>\n        <Overlay />\n\n        <Wrapper>\n            <button type='button' className=\"close\" onClick={cache}>\n                &times;\n            </button>\n            <AddPSU onClose={cache} />\n        </Wrapper>\n\n    </React.Fragment>\n\n) : null;\n\nexport const UpdatePSUModale = ({ revele, cache, state }) => revele ? (\n\n    <React.Fragment>\n        <Overlay />\n\n        <Wrapper>\n            <button type='button' className=\"close\" onClick={cache}>\n                &times;\n            </button>\n            \n        </Wrapper>\n\n    </React.Fragment>\n\n) : null;\n\nexport default PSUModale","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/PSU/PSU.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleMotherBoard.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/MotherBoard/MotherBoard.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleRAM.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/RAM/RAM.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/Cooling.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleCooling.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HDD/HDD.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleHDD.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Modale/ModaleSSD.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/SSD/SSD.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/SSDList/SSDList.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/RAMList/RAMList.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/HDDList/HDDList.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/MotherBoardList/MotherBoardList.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/GPUList/GPUList.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CPUList/CPUList.jsx",["665"],"import React, { useState, useEffect } from 'react';\nimport { Card } from '../../../components/Card/Card';\nimport GetAPIData from '../../../data/get_api_data';\nimport { CPUListPageWrapper } from './CPUList.style'\n\nconst CPUList = () => {\n\n    const [CPUs, setCPUs] = useState([]);\n    \n\n    useEffect(async () => {\n        const endpoint = 'CPUs'\n        GetAPIData(endpoint).then(\n            res => {\n                setCPUs(res.data)\n            }\n        )\n    }, [])\n\n    console.log(CPUs);\n\n    \n\n    return (\n        <CPUListPageWrapper>\n            {CPUs && CPUs.map(CPU => \n                <Card>\n                    <Card.Image src={CPU.image} alt=\"Image\" />\n                    <Card.Body>\n                        <Card.Title>{CPU.nom}</Card.Title>\n                        <Card.Text>Socket : {CPU.socket}</Card.Text>\n                        <Card.Text>Coeurs/Threads : {CPU.nb_coeur} coeurs/{CPU.nb_threads} threads</Card.Text>\n                        <Card.Text>Description : {CPU.description}</Card.Text>\n                        <Card.Button>Cliquer</Card.Button>\n                    </Card.Body>\n                </Card>\n            )}\n        </CPUListPageWrapper>\n    )\n}\n\nexport default CPUList\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Slider/content.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CoolingList/CoolingList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/hooks/useLocalStorage.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/Icon.js",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/components/Navbar/nav/NavLinks.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/AddCPU.jsx",["666"],"import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Field, Formik } from 'formik';\nimport PostAPIData from '../../../data/post_api_data';\nimport { CPUCRUDWrapper } from './CPU.style';\n\nconst AddCPU = ({ onClose }) => {\n\n    const initialCPUState = {\n        image: '',\n        architecture: '',\n        cache: '',\n        chipset: '',\n        chipset_graphique: '',\n        frequence: '',\n        frequence_boost: '',\n        nb_coeur: 0,\n        nb_threads: 0,\n        description: '',\n        nom: '',\n        overclocking: false,\n        socket: '',\n        type: ''\n    }\n\n    const [CPU, setCPU] = useState(initialCPUState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setCPU({ ...CPU, [name]: value });\n    }\n\n    const initialValues = {\n        image: CPU.image ?? '',\n        nom: CPU.nom ?? '',\n        architecture: CPU.architecture ?? '',\n        cache: CPU.cache ?? '',\n        chipset: CPU.chipset ?? '',\n        chipset_graphique: CPU.chipset_graphique ?? '',\n        fréquence: CPU.frequence ?? '',\n        nb_coeur: CPU.nb_coeur ?? '',\n        nb_threads: CPU.nb_threads ?? '',\n        description: CPU.description ?? '',\n        overclocking: CPU.overclocking ?? '',\n        socket: CPU.socket ?? '',\n        type: CPU.type ?? ''\n    }\n\n    const LegalSchema = Yup.object().shape({\n        image: Yup.string()\n            .required('Ce champ est requis !'),\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        architecture: Yup.string()\n            .required('Ce champ est requis !'),\n        cache: Yup.string()\n            .required('Ce champ est requis !'),\n        chipset: Yup.string()\n            .required('Ce champ est requis !'),\n        chipset_graphique: Yup.string()\n            .required('Ce champ est requis'),\n        frequence: Yup.string()\n            .required('Ce champ est requis !'),\n        frequence_boost: Yup.string()\n            .required('Ce champ est requis'),\n        nb_coeur: Yup.number()\n            .required('Ce champ est requis !'),\n        nb_threads: Yup.number()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('Ce champ est requis !'),\n        overclocking: Yup.boolean()\n            .required('Cette option est requise !'),\n    })\n\n    console.log(initialValues);\n    \n\n    return (\n        <CPUCRUDWrapper>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={LegalSchema}\n                onSubmit={async values => {\n                    const endpoint = \"CPU\"\n                    console.log(JSON.stringify(values), 'values')\n\n                    const response = await PostAPIData(endpoint, values).then(\n                        res => {\n                            setSubmitted(true)\n                            console.log(res)\n                        }\n                    )\n                    console.log(response);\n                    onClose()\n                }}\n            >\n                {({\n                    errors,\n                    touched,\n                    handleSubmit\n                }) => (\n                    <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                        <label>Nom</label>\n                        <Field name=\"nom\" type=\"text\" placeholder=\"Renseignez le nom\" className=\"first-input\"></Field>\n                        <div className=\"form--error\">{errors.nom && touched.nom}</div>\n\n                        <label>Image</label>\n                        <Field name=\"image\" type='text' placeholder=\"Renseignez l'image\"></Field>\n                        <div>{errors.image && touched.image}</div>\n\n                        <label>Architecture</label>\n                        <Field name=\"architecture\" type=\"text\" placeholder=\"Renseignez l'architecture\"></Field>\n\n                        <label>Cache</label>\n                        <Field name=\"cache\" type=\"text\" placeholder=\"Renseignez le cache\"></Field>\n                        <div>{errors.couleur && touched.couleur}</div>\n\n                        <label>Socket</label>\n                        <Field name=\"socket\" type=\"text\" ></Field>\n                        <div>{errors.socket && touched.socket}</div>\n\n                        <label>Chipset</label>\n                        <Field name=\"chipset\" type=\"text\" placeholder=\"Renseignez le chipset\"></Field>\n                        <div className=\"form-error\">{errors.facade_laterale && touched.facade_laterale}</div>\n\n                        <label>Chipset graphique</label>\n                        <Field name=\"chipset_graphique\" type='text' placeholder=\"Renseignez le chipset graphique\"></Field>\n                        <div className=\"form--error\">{errors.matériaux && touched.matériaux}</div>\n\n                        <label>Fréquence</label>\n                        <Field name=\"frequence\" type=\"text\" placeholder=\"Renseignez la fréquence\"></Field>\n                        <div className=\"form--error\">{errors.type && touched.type}</div>\n\n                        <label>Fréquence Boost</label>\n                        <Field name=\"frequence_boost\" type=\"text\" placeholder=\"Renseignez la fréquence boost\"></Field>\n                        <div className=\"form--error\">{errors.frequence_boost && touched.frequence_boost}</div>\n\n                        <label>Coeurs </label>\n                        <Field name=\"nb_coeur\" type=\"number\"></Field>\n                        <div className=\"form--error\">{errors.description && touched.description}</div>\n\n                        <label>Threads</label>\n                        <Field name=\"nb_threads\" type=\"number\"></Field>\n                        <div className=\"form--error\">{errors.description && touched.description}</div>\n\n                        <label>Description</label>\n                        <Field type=\"text\" name='description'></Field>\n                        <div>{errors.description && touched.description} </div>\n\n                        <label>Type</label>\n                        <Field name=\"type\" type=\"text\"></Field>\n                        <div> {errors.type && touched.type} </div>\n\n                        <button type=\"submit\">Envoyer</button>\n                    </form>\n                )}\n            </Formik>\n        </CPUCRUDWrapper>\n    )\n}\n\nexport default AddCPU\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/AddGPU.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/CPU/CPU.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/GPU/GPU.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/PSU/AddPSU.jsx",["667"],"import React, { useState } from 'react';\nimport * as Yup from 'yup'\nimport PostAPIData from '../../../data/post_api_data'\nimport { Field, Formik } from 'formik'\nimport { CaseCRUDWrapper } from '../Case/Case.style';\n\nconst AddPSU = ({ onClose }) => {\n\n    const initialPSUState = {\n        certif: '',\n        format: '',\n        image: '',\n        marque: '',\n        modulaire: false,\n        nom: '',\n        puissance: '',\n        description: ''\n    }\n\n    const [PSU, setPSU] = useState(initialPSUState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const initialValues = {\n        certif: PSU.certif ?? '',\n        format: PSU.format ?? '',\n        image: PSU.image ?? '',\n        marque: PSU.marque ?? '',\n        modulaire: PSU.modulaire ?? '',\n        nom: PSU.nom ?? '',\n        puissance: PSU.puissance ?? '',\n        description: PSU.description ?? ''\n    }\n\n    const LegalSchema = Yup.object().shape({\n        certif: Yup.string()\n            .required(\"Ce champ est requis !\"),\n        format: Yup.string()\n            .required('Cette option est requise !'),\n        image: Yup.string()\n            .required('Cette option est requise !'),\n        marque: Yup.string()\n            .required('Ce champ est requis !'),\n        modulaire: Yup.boolean()\n            .required('Ce champ est requis !'),\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        puissance: Yup.string()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('Ce champ est requis !')\n    })\n\n    console.log(initialValues);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setPSU({ ...PSU, [name]: value })\n    }\n\n    return (\n        <CaseCRUDWrapper>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={LegalSchema}\n                        onSubmit={async (values) => {\n                            console.log(values, 'values')\n                            const endpoint = `PSU`;\n                            console.log(JSON.stringify(values), 'values')\n\n                            const response = await PostAPIData(endpoint, values).then(\n                                setSubmitted(true)\n                            ).catch(e => {\n                                console.log(e)\n                            })\n                            console.log(response, 'response');\n                            onClose()\n                        }}\n                    >\n                        {({\n                            errors,\n                            touched,\n                            handleSubmit\n                        }) => (\n                            <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                                <label>Certif</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"certif\" type=\"text\" placeholder=\"Renseignez le nom\" className=\"first-input\"></Field>\n                                <div className=\"form--error\">{errors.certif && touched.certif}</div>\n\n                                <label>Format</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"format\" type=\"text\" placeholder=\"Renseignez l'image\"></Field>\n                                <div>{errors.format && touched.format}</div>\n\n                                <label>Image</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"image\" type=\"text\" placeholder=\"Renseignez la couleur\"></Field>\n                                <div>{errors.image && touched.image}</div>\n\n                                <label>Marque</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"marque\" type=\"text\" placeholder=\"Renseignez la façade latérale\"></Field>\n                                <div className=\"form-error\">{errors.marque && touched.marque}</div>\n\n                                <label>Modulaire</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"modulaire\" type='checkbox' placeholder=\"Renseignez le format\"></Field>\n                                <div style={{ color: 'red'}}>{errors.modulaire && touched.modulaire}</div>\n\n                                <label>Nom</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"nom\" type=\"text\"></Field>\n                                <div className=\"form--error\" style={{ color: \"red\" }}>{errors.nom && touched.nom}</div>\n\n                                <label>Puissance</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"puissance\" type=\"text\"></Field>\n                                <div className=\"form--error\" style={{ color: \"red\" }}> {errors.puissance && touched.puissance}</div>\n\n                                <label>Description</label>\n                                <Field style={{ marginBottom: \"10px\" }} name=\"description\" type=\"text-area\" ></Field>\n                                <div style={{ color: \"red\" }}>{errors.description && touched.description} </div>\n\n                                <button type=\"submit\">Envoyer</button>\n                            </form>\n                        )}\n                    </Formik>\n        </CaseCRUDWrapper>\n    ) \n}\n\nexport default AddPSU\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/MotherBoard/AddMotherBoard.jsx",["668"],"import React, { useState } from 'react';\nimport * as Yup from 'yup'\nimport PostAPIData from '../../../data/post_api_data';\nimport { Field, Formik } from 'formik'\nimport { CaseCRUDWrapper } from '../Case/Case.style';\n\nconst AddMotherBoard = ({ onClose }) => {\n\n    const initialMBState = {\n        image: '',\n        chipset: '',\n        constructeur: '',\n        format: '',\n        fréquence_mémoire: '',\n        description: '',\n        nom: '',\n        proco_compatible: '',\n        socket: ''\n    }\n\n    const [MB, setMB] = useState(initialMBState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const initialValues = {\n        image: MB.image ?? '',\n        chipset: MB.chipset ?? '',\n        constructeur: MB.constructeur ?? '',\n        format: MB.format ?? '',\n        fréquence_mémoire: MB.fréquence_mémoire ?? '',\n        description: MB.description ?? '',\n        nom: MB.nom ?? '',\n        proco_compatible: MB.proco_compatible ?? '',\n        socket: MB.socket ?? '',\n    }\n\n    const LegalSchema = Yup.object().shape({\n        image: Yup.string()\n            .required(\"Ce champ est requis !\"),\n        chipset: Yup.string()\n            .required('Ce champ est requis !'),\n        constructeur: Yup.string()\n            .required('Ce champ est requis !'),\n        format: Yup.string()\n            .required('Ce champ est requis !'),\n        fréquence_mémoire: Yup.string()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('Ce champ est requis !'),\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        proco_compatible: Yup.string()\n            .required('Ce champ est requis !'),\n        socket: Yup.string()\n            .required('Ce champ est requis !'),\n    })\n\n    console.log(initialValues);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setMB({ ...MB, [name]: value })\n    }\n\n    return (\n        <CaseCRUDWrapper>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={LegalSchema}\n                        onSubmit={async (values) => {\n                            console.log(values, 'values')\n                            const endpoint = `CarteMere`;\n                            console.log(JSON.stringify(values), 'values')\n\n                            const response = await PostAPIData(endpoint, values).then(\n                                setSubmitted(true)\n                            ).catch(e => {\n                                console.log(e)\n                            })\n                            console.log(response, 'response');\n                            onClose()\n                        }}\n                    >\n                        {({\n                            errors,\n                            touched,\n                            handleSubmit\n                        }) => (\n                            <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                                <label>Image</label>\n                                <Field name=\"image\" type=\"text\" placeholder=\"Renseignez l'image\" className=\"first-input\"></Field>\n                                <div className=\"form--error\">{errors.image && touched.image}</div>\n\n                                <label>Chipset</label>\n                                <Field name=\"chipset\" placeholder=\"Renseignez le chipset\"></Field>\n                                <div>{errors.chipset && touched.chipset}</div>\n\n                                <label>Constructeur</label>\n                                <Field name=\"constructeur\" type=\"text\" placeholder=\"Renseignez le constructeur\"></Field>\n                                <div>{errors.constructeur && touched.constructeur}</div>\n\n                                <label>Format</label>\n                                <Field name=\"format\" type=\"text\" placeholder=\"Renseignez le format\"></Field>\n                                <div>{errors.format && touched.format}</div>\n\n                                <label>Fréquence Mémoire</label>\n                                <Field name=\"fréquence_mémoire\" type='text' placeholder=\"Renseignez la fréquence de la mémoire\"></Field>\n                                <div>{errors.format && touched.format}</div>\n\n                                <label>Description</label>\n                                <Field name=\"description\" type=\"text\"></Field>\n                                <div className=\"form--error\">{errors.description && touched.description}</div>\n\n                                <label>Nom</label>\n                                <Field name=\"nom\" type=\"text\"></Field>\n                                <div className=\"form--error\"> {errors.nom && touched.nom}</div>\n\n                                <label>Proco Compa</label>\n                                <Field type=\"text\" name=\"proco_compatible\"></Field>\n                                <div className=\"form--error\">{errors.proco_compatible && touched.proco_compatible}</div>\n\n                                <label>Socket</label>\n                                <Field name='socket' type=\"text\"></Field>\n                                <div className=\"form--error\">{errors.socket && touched.socket}</div>\n\n                                <button type=\"submit\">Envoyer</button>\n                            </form>\n                        )}\n                    </Formik>\n        </CaseCRUDWrapper>\n    ) \n}\n\nexport default AddMotherBoard\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/RAM/AddRAM.jsx",["669"],"import React, { useState } from 'react';\nimport * as Yup from 'yup'\nimport PostAPIData from '../../../data/post_api_data'\nimport { Field, Formik } from 'formik'\nimport { CaseCRUDWrapper } from '../Case/Case.style';\n\nconst AddRAM = ({ onClose }) => {\n\n    const initialRAMState = {\n        capacité: \"\",\n        fréquence: \"\",\n        image: \"\",\n        interface: \"\",\n        latence: \"\",\n        description: \"\",\n        marque: \"\",\n        nom: \"\",\n        quantité: \"\"\n    }\n\n    const [RAM, setRAM] = useState(initialRAMState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const initialValues = {\n        capacité: RAM.capacité ?? '',\n        fréquence: RAM.fréquence ?? '',\n        image: RAM.image ?? '',\n        interface: RAM.interface ?? '' ,\n        latence: RAM.latence ?? '' ,\n        description: RAM.description ?? '' ,\n        marque: RAM.marque ?? '',\n        nom: RAM.nom ?? '',\n        quantité: RAM.quantité ?? '',\n    }\n\n    const LegalSchema = Yup.object().shape({\n        capacité: Yup.string()\n            .required(\"Ce champ est requis !\"),\n        fréquence: Yup.string()\n            .required('Cette option est requise !'),\n        image: Yup.string()\n            .required('Cette option est requise !'),\n        interface: Yup.string()\n            .required('Ce champ est requis !'),\n        latence: Yup.string()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('Ce champ est requis !'),\n        marque: Yup.string()\n            .required('Ce champ est requis !'),\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        quantité: Yup.string()\n            .required('Ce champ est requis !'),\n    })\n\n    console.log(initialValues);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setRAM({ ...RAM, [name]: value })\n    }\n\n    return (\n        <CaseCRUDWrapper>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={LegalSchema}\n                        onSubmit={async (values) => {\n                            console.log(values, 'values')\n                            const endpoint = `RAM`;\n                            console.log(JSON.stringify(values), 'values')\n\n                            const response = await PostAPIData(endpoint, values).then(\n                                setSubmitted(true)\n                            ).catch(e => {\n                                console.log(e)\n                            })\n                            console.log(response, 'response');\n                            onClose()\n                        }}\n                    >\n                        {({\n                            errors,\n                            touched,\n                            handleSubmit\n                        }) => (\n                            <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                                <label>Capacité</label>\n                                <Field name=\"capacité\" type=\"text\" placeholder=\"Renseignez la capcité\" className=\"first-input\"></Field>\n                                <div className=\"form--error\">{errors.capacité && touched.capacité}</div>\n\n                                <label>Fréquence</label>\n                                <Field name=\"fréquence\" placeholder=\"Renseignez la fréquence\"></Field>\n                                <div>{errors.fréquence && touched.fréquence}</div>\n\n                                <label>Image</label>\n                                <Field name=\"image\" type=\"text\" placeholder=\"Renseignez l'image\"></Field>\n                                <div className=\"form--error\">{errors.image && touched.image}</div>\n\n                                <label>Interface</label>\n                                <Field name=\"interface\" type=\"text\" placeholder=\"Renseignez l'interface\"></Field>\n                                <div className=\"form-error\">{errors.interface && touched.interface}</div>\n\n                                <label>Latence</label>\n                                <Field name=\"latence\" type='text' placeholder=\"Renseignez le format\"></Field>\n                                <div className=\"form--error\">{errors.latence && touched.latence}</div>\n\n                                <label>Marque</label>\n                                <Field name=\"marque\" type=\"text\"></Field>\n                                <div className=\"form--error\">{errors.marque && touched.marque}</div>\n\n                                <label>Nom</label>\n                                <Field name=\"nom\" type=\"text\"></Field>\n                                <div className=\"form--error\"> {errors.nom && touched.nom}</div>\n\n                                <label>Quantité</label>\n                                <Field type=\"text\" name=\"quantité\"></Field>\n                                <div className=\"form--error\">{errors.quantité && touched.quantité}</div>\n\n                                <label>Description</label>\n                                <Field name='description' type=\"text-area\"></Field>\n                                <div className=\"form--error\">{errors.description && touched.description}</div>\n\n                                <button type=\"submit\">Envoyer</button>\n                            </form>\n                        )}\n                    </Formik>\n        </CaseCRUDWrapper>\n    ) \n}\n\nexport default AddRAM\n\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/Cooling.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/Cooling/AddCooling.jsx",["670","671"],"import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport PostAPIData from '../../../data/post_api_data';\nimport { CoolingCRUDWrapper } from './Cooling.style';\n\nconst AddCooling = ({ onClose }) => {\n\n    const initialCoolingState = {\n        bruit: '',\n        format: '',\n        marque: '',\n        matériaux: '',\n        description: '',\n        nom: '',\n        socket: '',\n        type: '',\n        image: ''\n    }\n\n    const [Cooling, setCooling] = useState(initialCoolingState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const initialValues = {\n        bruit: Cooling.bruit ?? '',\n        format: Cooling.format ?? '',\n        marque: Cooling.marque ?? '',\n        socket: Cooling.socket ?? '',\n        matériaux: Cooling.matériaux ?? '',\n        description: Cooling.description ?? '',\n        nom: Cooling.nom ?? '',\n        image: Cooling.image ?? '',\n        type: Cooling.type ?? '',\n    }\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setCooling({ ...Cooling, [name]: value });\n    }\n\n    const LegalSchema = Yup.object().shape({\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        bruit: Yup.string()\n            .required('Ce champ est requis !'),\n        format: Yup.string()\n            .required('Ce champ est requis !'),\n        marque: Yup.string()\n            .required('Ce champ est requis !'),\n        socket: Yup.string()\n            .required('Ce champ est requis !'),\n        matériaux: Yup.string()\n            .required('Ce champ est requis !'),\n        image: Yup.string()\n            .required('Ce champ est requis !'),\n        socket: Yup.string()\n            .required('Ce champ est requis !'),\n        type: Yup.string()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('ce champ est requis !')\n    })\n\n    console.log(initialValues);\n\n    return (\n        <CoolingCRUDWrapper>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={LegalSchema}\n                onSubmit={async values => {\n                    const endpoint = 'Cooling'\n                    console.log(JSON.stringify(values), values)\n\n                    const response = await PostAPIData(endpoint, values).then(\n                        res => {\n                            setSubmitted(true);\n                            console.log(res)\n                        }\n                    )\n                    console.log(response, 'response');\n                    onClose()\n                }}\n            >\n                {({\n                    errors,\n                    touched,\n                    handleSubmit\n                }) => (\n                    <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                        <label>Nom</label>\n                        <Field name=\"nom\" type=\"text\" placeholder=\"Renseignez le nom\" className=\"first-input\"></Field>\n                        <div className=\"form--error\">{errors.nom && touched.nom}</div>\n\n                        <label>Image</label>\n                        <Field name=\"image\" type='text' placeholder=\"Renseignez l'image\"></Field>\n                        <div>{errors.image && touched.image}</div>\n\n                        <label>Bruit</label>\n                        <Field name=\"bruit\" type=\"text\" placeholder=\"Renseignez le niveau de bruit\"></Field>\n                        <div>{errors.bruit && touched.bruit} </div>\n\n                        <label>Format</label>\n                        <Field name=\"format\" type=\"text\" placeholder=\"Renseignez la couleur\"></Field>\n                        <div>{errors.format && touched.format}</div>\n\n                        <label>Marque</label>\n                        <Field name=\"marque\" type=\"text\" placeholder=\"Renseignez la façade latérale\"></Field>\n                        <div className=\"form-error\">{errors.marque && touched.marque}</div>\n\n                        <label>Matériaux</label>\n                        <Field name=\"matériaux\" type='text' placeholder=\"Renseignez le format\"></Field>\n                        <div className=\"form--error\">{errors.matériaux && touched.matériaux}</div>\n\n                        <label>Socket</label>\n                        <Field type=\"text\" name=\"socket\" ></Field>\n\n                        <label>Type</label>\n                        <Field name=\"type\" type=\"text\"></Field>\n                        <div className=\"form--error\">{errors.type && touched.type}</div>\n\n                        <label>Description</label>\n                        <Field name=\"description\" type=\"text-area\"></Field>\n                        <div className=\"form--error\">{errors.description && touched.description}</div>\n\n                        <button type=\"submit\">Envoyer</button>\n                    </form>\n                )}\n            </Formik>\n        </CoolingCRUDWrapper>\n    )\n}\n\nexport default AddCooling\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/HDD/AddHDD.jsx",["672"],"import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport PostAPIData from '../../../data/post_api_data';\nimport { Formik, Field } from 'formik';\nimport { CaseCRUDWrapper } from '../Case/Case.style';\n\nconst AddHDD = ({ onClose }) => {\n\n    const initialHDDState = {\n        image: '',\n        RPM: 0,\n        capacité: '',\n        format: \"\",\n        interface: \"\",\n        description: \"\",\n        marque: \"\",\n        mémoire_cache: \"\",\n        nom: \"\",\n        transfert: \"\"\n    }\n\n    const [HDD, setHDD] = useState(initialHDDState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const initialValues = {\n        image: HDD.image ?? '',\n        RPM: HDD.RPM ?? '',\n        capacité: HDD.capacité ?? '',\n        format: HDD.format ?? '',\n        interface: HDD.interface ?? '',\n        description: HDD.description ?? '',\n        marque: HDD.marque ?? '',\n        mémoire_cache: HDD.mémoire_cache ?? '',\n        nom: HDD.nom ?? '',\n        transfert: HDD.transfert ?? ''\n    }\n\n    const LegalSchema = Yup.object().shape({\n        image: Yup.string()\n            .required(\"Ce champ est requis !\"),\n        RPM: Yup.number()\n            .required('Ce champ est requis !'),\n        capacité: Yup.string()\n            .required('Ce champ est requis !'),\n        format: Yup.string()\n            .required('Ce champ est requis !'),\n        interface: Yup.string()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('Ce champ est requis !'),\n        marque: Yup.string()\n            .required('Ce champ est requis !'),\n        mémoire_cache: Yup.string()\n            .required('Ce champ est requis !'),\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        transfert: Yup.string()\n            .required('Ce champ est requis !')\n    })\n\n    console.log(initialValues);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setHDD({ ...HDD, [name]: value })\n    }\n\n    return (\n        <CaseCRUDWrapper>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={LegalSchema}\n                        onSubmit={async (values) => {\n                            console.log(values, 'values')\n                            const endpoint = `HDD`;\n                            console.log(JSON.stringify(values), 'values')\n\n                            const response = await PostAPIData(endpoint, values).then(\n                                setSubmitted(true)\n                            ).catch(e => {\n                                console.log(e)\n                            })\n                            console.log(response, 'response');\n                            onClose()\n                        }}\n                    >\n                        {({\n                            errors,\n                            touched,\n                            handleSubmit\n                        }) => (\n                            <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                                <label>Nom</label>\n                                <Field name=\"nom\" type=\"text\" placeholder=\"Renseignez le nom\"></Field>\n                                <div>{errors.nom && touched.nom}</div>\n\n                                <label>Image</label>\n                                <Field name=\"image\" type=\"text\" placeholder=\"Renseignez l'image\" className=\"first-input\"></Field>\n                                <div className=\"form--error\">{errors.image && touched.image}</div>\n\n                                <label>RPM</label>\n                                <Field name=\"RPM\" type=\"number\" placeholder=\"Renseignez les RPM\"></Field>\n                                <div>{errors.RPM && touched.RPM}</div>\n\n                                <label>Capacité</label>\n                                <Field name=\"capacité\" type=\"text\" placeholder=\"Renseignez la capacité\"></Field>\n                                <div>{errors.capacité && touched.capacité}</div>\n\n                                <label>Format</label>\n                                <Field name=\"format\" type=\"text\" placeholder=\"Renseignez le format\"></Field>\n                                <div className=\"form-error\">{errors.format && touched.format}</div>\n\n                                <label>Interface</label>\n                                <Field name=\"interface\" type='text' placeholder=\"Renseignez l'interface\"></Field>\n                                <div></div>\n\n                                <label>Marque</label>\n                                <Field name=\"marque\" type=\"text\" placeholder=\"Renseignez la marque\"></Field>\n                                <div className=\"form--error\">{errors.ventilateur && touched.ventilateur}</div>\n\n                                <label>Mémoire Cache</label>\n                                <Field name=\"mémoire_cache\" type=\"text-area\"></Field>\n                                <div className=\"form--error\"> {errors.description && touched.description}</div>\n\n                                <label>Transfert</label>\n                                <Field type=\"text\" name=\"transfert\"></Field>\n                                <div className=\"form--error\">{errors.transfert && touched.transfert}</div>\n\n                                <label>Description</label>\n                                <Field name='description' type=\"text-area\"></Field>\n                                <div className=\"form--error\">{errors.description && touched.description}</div>\n\n                                <button type=\"submit\">Envoyer</button>\n                            </form>\n                        )}\n                    </Formik>\n        </CaseCRUDWrapper>\n    ) \n}\n\nexport default AddHDD","/Users/mathieuchambaud/Documents/FrontHardShop/src/pages/CRUD/SSD/AddSSD.jsx",["673","674"],"import React, { useState } from 'react';\nimport * as Yup from 'yup'\nimport PostAPIData from '../../../data/post_api_data';\nimport { Field, Formik } from 'formik'\nimport { CaseCRUDWrapper } from '../Case/Case.style';\n\nconst AddSSD = ({ onClose }) => {\n\n    const initialSSDState = {\n        capacité: '',\n        connectique: '',\n        format: '',\n        image: '',\n        interface: '',\n        description: '',\n        lecture: '',\n        marque: '',\n        nom: '',\n        ecriture: ''\n    }\n\n    const [SSD, setSSD] = useState(initialSSDState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const initialValues = {\n        capacité: SSD.capacité ?? '',\n        connectique: SSD.connectique ?? '',\n        format: SSD.format ?? '',\n        image: SSD.image ?? '',\n        interface: SSD.interface ?? '',\n        description: SSD.description ?? '',\n        lecture: SSD.lecture ?? '',\n        marque: SSD.marque ?? '',\n        nom: SSD.nom ?? '',\n        ecriture: SSD.ecriture ?? ''\n    }\n\n    const LegalSchema = Yup.object().shape({\n        capacité: Yup.string()\n            .required(\"Ce champ est requis !\"),\n        connectique: Yup.string()\n            .required('Cette option est requise !'),\n        format: Yup.string()\n            .required('Cette option est requise !'),\n        image: Yup.string()\n            .required('Ce champ est requis !'),\n        interface: Yup.string()\n            .required('Ce champ est requis !'),\n        description: Yup.string()\n            .required('Ce champ est requis !'),\n        lecture: Yup.string()\n            .required('Ce champ est requis !'),\n        marque: Yup.string()\n            .required('Ce champ est requis !'),\n        nom: Yup.string()\n            .required('Ce champ est requis !'),\n        ecriture: Yup.string()\n            .required('Ce champ est requis !')\n    })\n\n    console.log(initialValues);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setSSD({ ...SSD, [name]: value })\n    }\n\n    return (\n        <CaseCRUDWrapper>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={LegalSchema}\n                        onSubmit={async (values) => {\n                            console.log(values, 'values')\n                            const endpoint = `SSD`;\n                            console.log(JSON.stringify(values), 'values')\n\n                            const response = await PostAPIData(endpoint, values).then(\n                                res => {\n                                    console.log(res)\n                                }\n                            ).catch(e => {\n                                console.log(e)\n                            })\n                            console.log(response, 'response');\n                            onClose()\n                        }}\n                    >\n                        {({\n                            errors,\n                            touched,\n                            handleSubmit\n                        }) => (\n                            <form onChange={handleInputChange} onSubmit={handleSubmit}>\n                                <label>Nom</label>\n                                <Field name=\"nom\" type=\"text\" placeholder=\"Renseignez le nom\" className=\"first-input\"></Field>\n                                <div className=\"form--error\">{errors.nom && touched.nom}</div>\n\n                                <label>Capacité</label>\n                                <Field name=\"capacité\" placeholder=\"Renseignez la capacité\"></Field>\n                                <div>{errors.capacité && touched.capacité}</div>\n\n                                <label>Connectique</label>\n                                <Field name=\"connectique\" type=\"text\" placeholder=\"Renseignez la connectique\"></Field>\n                                <div>{errors.connectique && touched.connectique}</div>\n\n                                <label>Format</label>\n                                <Field name=\"format\" type=\"text\" placeholder=\"Renseignez le format\"></Field>\n                                <div className=\"form-error\">{errors.format && touched.format}</div>\n\n                                <label>Image</label>\n                                <Field name=\"image\" type='text' placeholder=\"Renseignez l'image\"></Field>\n                                <div className=\"form--error\">{errors.image && touched.image}</div>\n\n                                <label>Interface</label>\n                                <Field name=\"interface\" type=\"text\"></Field>\n                                <div className=\"form--error\">{errors.interface && touched.interface}</div>\n\n                                <label>Lecture</label>\n                                <Field name=\"lecture\" type=\"text-area\"></Field>\n                                <div className=\"form--error\"> {errors.lecture && touched.lecture}</div>\n\n                                <label>Ecriture</label>\n                                <Field type=\"text\" name=\"ecriture\"></Field>\n                                <div className=\"form--error\">{errors.écriture && touched.écriture}</div>\n\n                                <label>Marque</label>\n                                <Field name='marque' type=\"text\"></Field>\n                                <div className=\"form--error\">{errors.marque && touched.marque}</div>\n\n                                <label>Description</label>\n                                <Field name=\"description\" type=\"text\" ></Field>\n                                <div className=\"form--error\">{errors.description && touched.description} </div>\n\n                                <button type=\"submit\">Envoyer</button>\n                            </form>\n                        )}\n                    </Formik>\n        </CaseCRUDWrapper>\n    ) \n}\n\nexport default AddSSD\n\n","/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CPUList/CPUList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/GPUList/GPUList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/GPUList/ModaleGPU.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/HDDList/HDDList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/MotherBoardList/MotherBoardList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/RAMList/RAMList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/SSDList/SSDList.style.jsx",[],"/Users/mathieuchambaud/Documents/FrontHardShop/src/container/Listing/CaseList/CaseList.style.jsx",[],{"ruleId":"675","severity":1,"message":"676","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":21},{"ruleId":"675","severity":1,"message":"679","line":23,"column":8,"nodeType":"677","messageId":"678","endLine":23,"endColumn":15},{"ruleId":"675","severity":1,"message":"680","line":24,"column":8,"nodeType":"677","messageId":"678","endLine":24,"endColumn":12},{"ruleId":"675","severity":1,"message":"681","line":25,"column":8,"nodeType":"677","messageId":"678","endLine":25,"endColumn":16},{"ruleId":"675","severity":1,"message":"676","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":21},{"ruleId":"675","severity":1,"message":"682","line":3,"column":10,"nodeType":"677","messageId":"678","endLine":3,"endColumn":17},{"ruleId":"675","severity":1,"message":"683","line":6,"column":33,"nodeType":"677","messageId":"678","endLine":6,"endColumn":43},{"ruleId":"675","severity":1,"message":"684","line":16,"column":11,"nodeType":"677","messageId":"678","endLine":16,"endColumn":26},{"ruleId":"675","severity":1,"message":"685","line":1,"column":8,"nodeType":"677","messageId":"678","endLine":1,"endColumn":13},{"ruleId":"675","severity":1,"message":"682","line":3,"column":10,"nodeType":"677","messageId":"678","endLine":3,"endColumn":17},{"ruleId":"675","severity":1,"message":"683","line":9,"column":33,"nodeType":"677","messageId":"678","endLine":9,"endColumn":43},{"ruleId":"675","severity":1,"message":"686","line":16,"column":11,"nodeType":"677","messageId":"678","endLine":16,"endColumn":14},{"ruleId":"675","severity":1,"message":"687","line":27,"column":11,"nodeType":"677","messageId":"678","endLine":27,"endColumn":19},{"ruleId":"675","severity":1,"message":"688","line":14,"column":11,"nodeType":"677","messageId":"678","endLine":14,"endColumn":22},{"ruleId":"675","severity":1,"message":"689","line":15,"column":17,"nodeType":"677","messageId":"678","endLine":15,"endColumn":23},{"ruleId":"675","severity":1,"message":"690","line":18,"column":11,"nodeType":"677","messageId":"678","endLine":18,"endColumn":16},{"ruleId":"675","severity":1,"message":"685","line":1,"column":8,"nodeType":"677","messageId":"678","endLine":1,"endColumn":13},{"ruleId":"675","severity":1,"message":"683","line":9,"column":33,"nodeType":"677","messageId":"678","endLine":9,"endColumn":43},{"ruleId":"675","severity":1,"message":"691","line":19,"column":13,"nodeType":"677","messageId":"678","endLine":19,"endColumn":21},{"ruleId":"675","severity":1,"message":"692","line":19,"column":23,"nodeType":"677","messageId":"678","endLine":19,"endColumn":35},{"ruleId":"675","severity":1,"message":"683","line":11,"column":33,"nodeType":"677","messageId":"678","endLine":11,"endColumn":43},{"ruleId":"675","severity":1,"message":"691","line":20,"column":12,"nodeType":"677","messageId":"678","endLine":20,"endColumn":20},{"ruleId":"675","severity":1,"message":"692","line":20,"column":22,"nodeType":"677","messageId":"678","endLine":20,"endColumn":34},{"ruleId":"675","severity":1,"message":"693","line":15,"column":11,"nodeType":"677","messageId":"678","endLine":15,"endColumn":14},{"ruleId":"675","severity":1,"message":"687","line":26,"column":11,"nodeType":"677","messageId":"678","endLine":26,"endColumn":19},{"ruleId":"675","severity":1,"message":"694","line":3,"column":8,"nodeType":"677","messageId":"678","endLine":3,"endColumn":16},{"ruleId":"675","severity":1,"message":"695","line":4,"column":10,"nodeType":"677","messageId":"678","endLine":4,"endColumn":14},{"ruleId":"675","severity":1,"message":"681","line":6,"column":8,"nodeType":"677","messageId":"678","endLine":6,"endColumn":16},{"ruleId":"675","severity":1,"message":"696","line":7,"column":8,"nodeType":"677","messageId":"678","endLine":7,"endColumn":19},{"ruleId":"675","severity":1,"message":"697","line":13,"column":13,"nodeType":"677","messageId":"678","endLine":13,"endColumn":20},{"ruleId":"675","severity":1,"message":"698","line":15,"column":12,"nodeType":"677","messageId":"678","endLine":15,"endColumn":16},{"ruleId":"675","severity":1,"message":"699","line":11,"column":11,"nodeType":"677","messageId":"678","endLine":11,"endColumn":14},{"ruleId":"675","severity":1,"message":"700","line":12,"column":11,"nodeType":"677","messageId":"678","endLine":12,"endColumn":14},{"ruleId":"675","severity":1,"message":"701","line":22,"column":11,"nodeType":"677","messageId":"678","endLine":22,"endColumn":16},{"ruleId":"675","severity":1,"message":"691","line":23,"column":13,"nodeType":"677","messageId":"678","endLine":23,"endColumn":21},{"ruleId":"675","severity":1,"message":"692","line":23,"column":23,"nodeType":"677","messageId":"678","endLine":23,"endColumn":35},{"ruleId":"675","severity":1,"message":"685","line":1,"column":8,"nodeType":"677","messageId":"678","endLine":1,"endColumn":13},{"ruleId":"675","severity":1,"message":"683","line":9,"column":33,"nodeType":"677","messageId":"678","endLine":9,"endColumn":43},{"ruleId":"675","severity":1,"message":"702","line":16,"column":11,"nodeType":"677","messageId":"678","endLine":16,"endColumn":14},{"ruleId":"675","severity":1,"message":"691","line":17,"column":13,"nodeType":"677","messageId":"678","endLine":17,"endColumn":21},{"ruleId":"675","severity":1,"message":"692","line":17,"column":23,"nodeType":"677","messageId":"678","endLine":17,"endColumn":35},{"ruleId":"675","severity":1,"message":"687","line":30,"column":11,"nodeType":"677","messageId":"678","endLine":30,"endColumn":19},{"ruleId":"675","severity":1,"message":"703","line":3,"column":10,"nodeType":"677","messageId":"678","endLine":3,"endColumn":15},{"ruleId":"675","severity":1,"message":"704","line":5,"column":10,"nodeType":"677","messageId":"678","endLine":5,"endColumn":16},{"ruleId":"675","severity":1,"message":"705","line":5,"column":32,"nodeType":"677","messageId":"678","endLine":5,"endColumn":43},{"ruleId":"675","severity":1,"message":"706","line":22,"column":12,"nodeType":"677","messageId":"678","endLine":22,"endColumn":21},{"ruleId":"675","severity":1,"message":"707","line":23,"column":12,"nodeType":"677","messageId":"678","endLine":23,"endColumn":15},{"ruleId":"675","severity":1,"message":"708","line":23,"column":17,"nodeType":"677","messageId":"678","endLine":23,"endColumn":23},{"ruleId":"675","severity":1,"message":"709","line":24,"column":12,"nodeType":"677","messageId":"678","endLine":24,"endColumn":16},{"ruleId":"675","severity":1,"message":"710","line":24,"column":18,"nodeType":"677","messageId":"678","endLine":24,"endColumn":25},{"ruleId":"675","severity":1,"message":"685","line":1,"column":8,"nodeType":"677","messageId":"678","endLine":1,"endColumn":13},{"ruleId":"675","severity":1,"message":"682","line":3,"column":10,"nodeType":"677","messageId":"678","endLine":3,"endColumn":17},{"ruleId":"675","severity":1,"message":"683","line":9,"column":33,"nodeType":"677","messageId":"678","endLine":9,"endColumn":43},{"ruleId":"675","severity":1,"message":"711","line":16,"column":11,"nodeType":"677","messageId":"678","endLine":16,"endColumn":14},{"ruleId":"675","severity":1,"message":"712","line":1,"column":27,"nodeType":"677","messageId":"678","endLine":1,"endColumn":36},{"ruleId":"675","severity":1,"message":"713","line":4,"column":8,"nodeType":"677","messageId":"678","endLine":4,"endColumn":19},{"ruleId":"675","severity":1,"message":"714","line":22,"column":11,"nodeType":"677","messageId":"678","endLine":22,"endColumn":18},{"ruleId":"675","severity":1,"message":"715","line":23,"column":12,"nodeType":"677","messageId":"678","endLine":23,"endColumn":23},{"ruleId":"675","severity":1,"message":"716","line":23,"column":25,"nodeType":"677","messageId":"678","endLine":23,"endColumn":39},{"ruleId":"675","severity":1,"message":"717","line":25,"column":13,"nodeType":"677","messageId":"678","endLine":25,"endColumn":18},{"ruleId":"675","severity":1,"message":"707","line":25,"column":20,"nodeType":"677","messageId":"678","endLine":25,"endColumn":23},{"ruleId":"675","severity":1,"message":"718","line":25,"column":25,"nodeType":"677","messageId":"678","endLine":25,"endColumn":36},{"ruleId":"675","severity":1,"message":"719","line":25,"column":38,"nodeType":"677","messageId":"678","endLine":25,"endColumn":45},{"ruleId":"675","severity":1,"message":"720","line":25,"column":47,"nodeType":"677","messageId":"678","endLine":25,"endColumn":62},{"ruleId":"675","severity":1,"message":"721","line":25,"column":64,"nodeType":"677","messageId":"678","endLine":25,"endColumn":75},{"ruleId":"675","severity":1,"message":"722","line":25,"column":77,"nodeType":"677","messageId":"678","endLine":25,"endColumn":83},{"ruleId":"675","severity":1,"message":"723","line":25,"column":85,"nodeType":"677","messageId":"678","endLine":25,"endColumn":88},{"ruleId":"675","severity":1,"message":"724","line":25,"column":90,"nodeType":"677","messageId":"678","endLine":25,"endColumn":101},{"ruleId":"675","severity":1,"message":"725","line":25,"column":103,"nodeType":"677","messageId":"678","endLine":25,"endColumn":112},{"ruleId":"675","severity":1,"message":"726","line":27,"column":11,"nodeType":"677","messageId":"678","endLine":27,"endColumn":24},{"ruleId":"675","severity":1,"message":"727","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"728","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":25},{"ruleId":"675","severity":1,"message":"729","line":2,"column":27,"nodeType":"677","messageId":"678","endLine":2,"endColumn":30},{"ruleId":"675","severity":1,"message":"730","line":5,"column":8,"nodeType":"677","messageId":"678","endLine":5,"endColumn":18},{"ruleId":"675","severity":1,"message":"731","line":11,"column":12,"nodeType":"677","messageId":"678","endLine":11,"endColumn":23},{"ruleId":"675","severity":1,"message":"732","line":20,"column":11,"nodeType":"677","messageId":"678","endLine":20,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":70,"column":45,"nodeType":"735","endLine":70,"endColumn":120},{"ruleId":"675","severity":1,"message":"736","line":2,"column":8,"nodeType":"677","messageId":"678","endLine":2,"endColumn":14},{"ruleId":"675","severity":1,"message":"737","line":5,"column":34,"nodeType":"677","messageId":"678","endLine":5,"endColumn":46},{"ruleId":"675","severity":1,"message":"731","line":10,"column":12,"nodeType":"677","messageId":"678","endLine":10,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":15,"column":11,"nodeType":"677","messageId":"678","endLine":15,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":19,"column":11,"nodeType":"677","messageId":"678","endLine":19,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":68,"column":45,"nodeType":"735","endLine":68,"endColumn":119},{"ruleId":"675","severity":1,"message":"737","line":5,"column":34,"nodeType":"677","messageId":"678","endLine":5,"endColumn":46},{"ruleId":"675","severity":1,"message":"731","line":10,"column":12,"nodeType":"677","messageId":"678","endLine":10,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":15,"column":11,"nodeType":"677","messageId":"678","endLine":15,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":19,"column":11,"nodeType":"677","messageId":"678","endLine":19,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":68,"column":45,"nodeType":"735","endLine":68,"endColumn":119},{"ruleId":"675","severity":1,"message":"727","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"728","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":25},{"ruleId":"675","severity":1,"message":"729","line":2,"column":27,"nodeType":"677","messageId":"678","endLine":2,"endColumn":30},{"ruleId":"675","severity":1,"message":"731","line":10,"column":12,"nodeType":"677","messageId":"678","endLine":10,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":15,"column":11,"nodeType":"677","messageId":"678","endLine":15,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":19,"column":11,"nodeType":"677","messageId":"678","endLine":19,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":75,"column":45,"nodeType":"735","endLine":75,"endColumn":119},{"ruleId":"675","severity":1,"message":"727","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"728","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":25},{"ruleId":"675","severity":1,"message":"729","line":2,"column":27,"nodeType":"677","messageId":"678","endLine":2,"endColumn":30},{"ruleId":"675","severity":1,"message":"737","line":4,"column":42,"nodeType":"677","messageId":"678","endLine":4,"endColumn":54},{"ruleId":"675","severity":1,"message":"731","line":10,"column":12,"nodeType":"677","messageId":"678","endLine":10,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":15,"column":11,"nodeType":"677","messageId":"678","endLine":15,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":19,"column":11,"nodeType":"677","messageId":"678","endLine":19,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":68,"column":45,"nodeType":"735","endLine":68,"endColumn":127},{"ruleId":"675","severity":1,"message":"727","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"728","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":25},{"ruleId":"675","severity":1,"message":"729","line":2,"column":27,"nodeType":"677","messageId":"678","endLine":2,"endColumn":30},{"ruleId":"675","severity":1,"message":"731","line":10,"column":12,"nodeType":"677","messageId":"678","endLine":10,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":15,"column":11,"nodeType":"677","messageId":"678","endLine":15,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":19,"column":11,"nodeType":"677","messageId":"678","endLine":19,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":68,"column":45,"nodeType":"735","endLine":68,"endColumn":119},{"ruleId":"675","severity":1,"message":"727","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"728","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":25},{"ruleId":"675","severity":1,"message":"729","line":2,"column":27,"nodeType":"677","messageId":"678","endLine":2,"endColumn":30},{"ruleId":"675","severity":1,"message":"731","line":10,"column":12,"nodeType":"677","messageId":"678","endLine":10,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":15,"column":11,"nodeType":"677","messageId":"678","endLine":15,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":19,"column":11,"nodeType":"677","messageId":"678","endLine":19,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":68,"column":45,"nodeType":"735","endLine":68,"endColumn":119},{"ruleId":"675","severity":1,"message":"727","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"728","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":25},{"ruleId":"675","severity":1,"message":"729","line":2,"column":27,"nodeType":"677","messageId":"678","endLine":2,"endColumn":30},{"ruleId":"675","severity":1,"message":"737","line":5,"column":34,"nodeType":"677","messageId":"678","endLine":5,"endColumn":46},{"ruleId":"675","severity":1,"message":"731","line":11,"column":12,"nodeType":"677","messageId":"678","endLine":11,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":16,"column":11,"nodeType":"677","messageId":"678","endLine":16,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":20,"column":11,"nodeType":"677","messageId":"678","endLine":20,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":69,"column":45,"nodeType":"735","endLine":69,"endColumn":119},{"ruleId":"675","severity":1,"message":"727","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"728","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":25},{"ruleId":"675","severity":1,"message":"729","line":2,"column":27,"nodeType":"677","messageId":"678","endLine":2,"endColumn":30},{"ruleId":"675","severity":1,"message":"739","line":4,"column":8,"nodeType":"677","messageId":"678","endLine":4,"endColumn":14},{"ruleId":"675","severity":1,"message":"740","line":4,"column":18,"nodeType":"677","messageId":"678","endLine":4,"endColumn":34},{"ruleId":"675","severity":1,"message":"731","line":11,"column":12,"nodeType":"677","messageId":"678","endLine":11,"endColumn":23},{"ruleId":"675","severity":1,"message":"738","line":16,"column":11,"nodeType":"677","messageId":"678","endLine":16,"endColumn":22},{"ruleId":"675","severity":1,"message":"732","line":20,"column":11,"nodeType":"677","messageId":"678","endLine":20,"endColumn":21},{"ruleId":"733","severity":1,"message":"734","line":69,"column":45,"nodeType":"735","endLine":69,"endColumn":123},{"ruleId":"675","severity":1,"message":"741","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":27},{"ruleId":"675","severity":1,"message":"714","line":13,"column":9,"nodeType":"677","messageId":"678","endLine":13,"endColumn":16},{"ruleId":"675","severity":1,"message":"679","line":2,"column":8,"nodeType":"677","messageId":"678","endLine":2,"endColumn":15},{"ruleId":"675","severity":1,"message":"730","line":3,"column":8,"nodeType":"677","messageId":"678","endLine":3,"endColumn":18},{"ruleId":"742","severity":1,"message":"743","line":11,"column":15,"nodeType":"744","endLine":18,"endColumn":6},{"ruleId":"675","severity":1,"message":"706","line":27,"column":12,"nodeType":"677","messageId":"678","endLine":27,"endColumn":21},{"ruleId":"675","severity":1,"message":"706","line":21,"column":12,"nodeType":"677","messageId":"678","endLine":21,"endColumn":21},{"ruleId":"675","severity":1,"message":"706","line":22,"column":12,"nodeType":"677","messageId":"678","endLine":22,"endColumn":21},{"ruleId":"675","severity":1,"message":"706","line":22,"column":12,"nodeType":"677","messageId":"678","endLine":22,"endColumn":21},{"ruleId":"675","severity":1,"message":"706","line":22,"column":12,"nodeType":"677","messageId":"678","endLine":22,"endColumn":21},{"ruleId":"745","severity":1,"message":"746","line":56,"column":9,"nodeType":"747","messageId":"748","endLine":56,"endColumn":15},{"ruleId":"675","severity":1,"message":"706","line":23,"column":12,"nodeType":"677","messageId":"678","endLine":23,"endColumn":21},{"ruleId":"675","severity":1,"message":"706","line":23,"column":12,"nodeType":"677","messageId":"678","endLine":23,"endColumn":21},{"ruleId":"675","severity":1,"message":"749","line":23,"column":23,"nodeType":"677","messageId":"678","endLine":23,"endColumn":35},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'AddCase' is defined but never used.","'Case' is defined but never used.","'CaseList' is defined but never used.","'useForm' is defined but never used.","'CustomForm' is defined but never used.","'Refroidissement' is assigned a value but never used.","'axios' is defined but never used.","'Hdd' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'MotherBoard' is assigned a value but never used.","'setMBs' is assigned a value but never used.","'token' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Psu' is assigned a value but never used.","'CoolTabs' is defined but never used.","'Card' is defined but never used.","'CoolingList' is defined but never used.","'TabPane' is assigned a value but never used.","'Case' is assigned a value but never used.","'CPU' is assigned a value but never used.","'GPU' is assigned a value but never used.","'state' is assigned a value but never used.","'Ssd' is assigned a value but never used.","'Field' is defined but never used.","'Button' is defined but never used.","'CustomInput' is defined but never used.","'submitted' is assigned a value but never used.","'RGB' is assigned a value but never used.","'setRGB' is assigned a value but never used.","'alim' is assigned a value but never used.","'setAlim' is assigned a value but never used.","'Gpu' is assigned a value but never used.","'useEffect' is defined but never used.","'PostAPIData' is defined but never used.","'history' is assigned a value but never used.","'currentCase' is assigned a value but never used.","'setCurrentCase' is assigned a value but never used.","'image' is assigned a value but never used.","'alim_inclus' is assigned a value but never used.","'couleur' is assigned a value but never used.","'facade_laterale' is assigned a value but never used.","'description' is assigned a value but never used.","'format' is assigned a value but never used.","'nom' is assigned a value but never used.","'ventilateur' is assigned a value but never used.","'published' is assigned a value but never used.","'initialValues' is assigned a value but never used.","'Drawer' is defined but never used.","'Divider' is defined but never used.","'Row' is defined but never used.","'UpdateCase' is defined but never used.","'visibleEdit' is assigned a value but never used.","'onCloseNew' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Sticky' is defined but never used.","'CustomSticky' is defined but never used.","'onCloseEdit' is assigned a value but never used.","'Modale' is defined but never used.","'UpdateCaseModale' is defined but never used.","'CSSAnimationGroup' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-dupe-keys","Duplicate key 'socket'.","ObjectExpression","unexpected","'setSubmitted' is assigned a value but never used."]
